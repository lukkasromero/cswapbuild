{"version":3,"sources":["utils/callHelpers.ts","utils/erc20.ts","hooks/useTokenBalance.ts","views/Home/components/CardValue2.tsx","hooks/useHarvest.ts","hooks/useFarmsWithBalance.ts","hooks/useAllEarnings.ts","views/Home/components/CardValue.tsx","views/Home/components/CakeHarvestBalance.tsx","views/Home/components/CakeWalletBalance.tsx","views/Home/components/FarmStakingCard.tsx","views/Home/components/TotalValueLockedCard.tsx","views/Home/components/CakeStats.tsx","views/Home/components/TwitterCard.tsx","views/Home/Home.tsx"],"names":["approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","refAddress","localStorage","getItem","length","deposit","BigNumber","times","pow","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","getContract","provider","Web3","eth","Contract","erc20","getAllowance","allowance","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","fetchTotalSupply","useBurnedBalance","setBalance","bal","fetchBalance","useTokenBalance","useWallet","ethereum","fastRefresh","res","CardValue2","suffix","decimals","fontSize","prefix","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","current","bold","useHarvest","farmPid","dispatch","useDispatch","useMasterchef","onReward","useCallback","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","useFarmsWithBalance","farmsWithBalances","setFarmsWithBalances","calls","farmsConfig","map","farm","getMasterChefAddress","name","params","multicall","masterChefABI","rawResults","results","index","fetchBalances","useAllEarnings","balances","fetchAllBalances","CardValue","style","backgroundRepeat","lineHeight","padding","backgroundSize","CakeHarvestBalance","earningsSum","TranslateString","useI18n","color","fontWeight","CakeWalletBalance","cakeBalance","StyledFarmStakingCard","styled","Card","Block","div","Label","img","theme","colors","text","Actions","FarmedStakingCard","pendingTx","setPendingTx","farmsWithBalance","getBalanceNumber","eggPrice","usePriceCakeBusd","toNumber","earning","balancesWithValue","filter","balanceType","farmWithBalance","harvestAllFarms","Two","mediaQueries","lg","addToMetaMask","window","web3","currentProvider","request","method","type","symbol","then","success","Error","console","log","catch","error","display","size","mb","onClick","width","cursor","border","background","height","justifyContent","borderRadius","src","alt","marginRight","marginLeft","marginTop","className","toFixed","id","disabled","fullWidth","UnlockButton","maxWidth","screen","overflow","flexWrap","verticalAlign","margin","minWidth","minHeight","boxShadow","backgroundImage","backgroundPosition","paddingLeft","paddingTop","stroke","fill","strokeWidth","viewBox","xmlns","d","TotalValueLockedCard","totalValue","useTotalValue","sm","Man","StyledCakeStats","Row","RowStyle","Line","Padding","CakeStats","burnedBalance","farms","useFarms","circSupply","minus","cakeSupply","marketCap","uniqPerBlock","StyledTwitterCard","TwitterCard","dataSource","sourceType","screenName","chrome","Hero","BaseLayout","Style","Column","Img","Home","close","setclose","Page","FarmStakingCard","position","top","left","transform","title","onDismiss"],"mappings":"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","file":"static/js/8.cee72079.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  let refAddress = localStorage.getItem('ref')\n  if (!refAddress || refAddress.length === 0) {\n    refAddress = '0x0000000000000000000000000000000000000000'\n  }\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), refAddress)\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0', '0x0000000000000000000000000000000000000000')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract(erc20 as unknown as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface CardValueProps {\n  value?: number\n  decimals?: number\n  fontSize?: string\n  prefix?: string\n  suffix?: string\n}\n\nconst CardValue2: React.FC<CardValueProps> = ({ value, suffix, decimals, fontSize = '40px', prefix }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold fontSize={fontSize}>\n      {prefix}\n      {countUp} {suffix}\n    </Text>\n  )\n}\n\nexport default CardValue2\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from './useRefresh'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\n  const { account } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingUNIQ',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n\n      setFarmsWithBalances(results)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return farmsWithBalances\n}\n\nexport default useFarmsWithBalance\n","import { useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from './useRefresh'\n\nconst useAllEarnings = () => {\n  const [balances, setBalance] = useState([])\n  const { account }: { account: string } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingUNIQ',\n        params: [farm.pid, account],\n      }))\n\n      const res = await multicall(masterChefABI, calls)\n\n      setBalance(res)\n    }\n\n    if (account) {\n      fetchAllBalances()\n    }\n  }, [account, fastRefresh])\n\n  return balances\n}\n\nexport default useAllEarnings\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  prefix?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <div style={{ backgroundRepeat: 'no-repeat', lineHeight: '1', padding: '10px', backgroundSize: '250px' }}>\n      <Text bold fontSize={fontSize} style={{ backgroundRepeat: 'no-repeat', lineHeight: '1' }}>\n        {prefix}\n        {countUp}\n      </Text>\n    </div>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport useAllEarnings from 'hooks/useAllEarnings'\nimport CardValue from './CardValue'\n\nconst CakeHarvestBalance = ({ earningsSum }) => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n\n  if (!account) {\n    return (\n      <Text\n        color=\"#787878\"\n        style={{\n          lineHeight: '5px',\n          padding: '15px',\n          fontSize: '22px',\n          fontWeight: 'bold',\n          backgroundRepeat: 'no-repeat',\n        }}\n      >\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return <CardValue value={earningsSum} />\n}\n\nexport default CakeHarvestBalance\n","import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport CardValue from './CardValue'\n\nconst CakeWalletBalance = ({ cakeBalance }) => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n\n  if (!account) {\n    return (\n      <Text\n        color=\"#787878\"\n        style={{\n          lineHeight: '5px',\n          padding: '15px',\n          fontSize: '22px',\n          fontWeight: 'bold',\n          backgroundRepeat: 'no-repeat',\n        }}\n      >\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return <CardValue value={cakeBalance} fontSize=\"24px\" />\n}\n\nexport default CakeWalletBalance\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button, Text, Flex } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport FlexLayout from 'components/layout/Flex'\n\nimport useI18n from 'hooks/useI18n'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\nimport { usePriceCakeBusd } from '../../../state/hooks'\nimport useTokenBalance from '../../../hooks/useTokenBalance'\nimport { getCakeAddress } from '../../../utils/addressHelpers'\nimport useAllEarnings from '../../../hooks/useAllEarnings'\nimport { getBalanceNumber } from '../../../utils/formatBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\n  // background-image: url('/images/egg/2a.png');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 176px;\n  background-size: 300px;\n  overflow: auto;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  padding: 10px;\n  font-size: 22px;\n  font-weight: bold;\n  background-repeat: no-repeat;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const farmsWithBalance = useFarmsWithBalance()\n  const cakeBalance = getBalanceNumber(useTokenBalance(getCakeAddress()))\n  const eggPrice = usePriceCakeBusd().toNumber()\n  const allEarnings = useAllEarnings()\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\n  }, 0)\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  const Two = styled.div`\n    ${({ theme }) => theme.mediaQueries.lg} {\n      display: flex;\n      justify-content: space-evenly;\n      flex-direction: row;\n    }\n    display: flex;\n    flex-direction: column;\n  `\n\n  const addToMetaMask = async () => {\n    // @ts-ignore: Unreachable code error\n\n    const _provider = window.web3.currentProvider\n      .request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20',\n          options: {\n            address: '0x7762A14082Ab475C06D3868B385E46aE27017231',\n            symbol: 'PRV',\n            decimals: 18,\n            // image: `https://privacyswap.finance/favicon.ico`,\n          },\n        },\n      })\n      .then((success) => {\n        if (success) {\n          console.log('FOO successfully added to wallet!')\n        } else {\n          throw new Error('Something went wrong.')\n        }\n      })\n      .catch(console.error)\n  }\n\n  return (\n    <StyledFarmStakingCard>\n      <Two>\n        <CardBody style={{ display: 'inline-grid' }}>\n          <Heading size=\"xl\" mb=\"24px\" color=\"#787878\">\n            {TranslateString(542, 'Farms & Staking')}\n          </Heading>\n          {/* <CardImage src=\"/images/egg/2.png\" alt=\"cake logo\" width={64} height={64} /> */}\n          {/* { account ? (\n          <button\n          id=\"harvest-all\"\n                disabled={balancesWithValue.length <= 0 || pendingTx}\n                onClick={harvestAllFarms} \n          type=\"button\" style={{fontSize:\"2rem\",fontWeight:\"bolder\",width:\"10rem\",cursor:\"pointer\",border:\"0.2rem solid #BEBEBE\",background:\"white\",height:\"3rem\",display:\"flex\",justifyContent:\"space-evenly\",borderRadius:\"1rem\"}}><img src=\"/images/pure.png\" alt=\"\" style={{width:\"2.2rem\",marginRight:\"0.5rem\"}}/>+<img src=\"/images/meta.png\" alt=\"\" style={{width:\"1.9rem\",marginLeft:\"1rem\",marginTop:\"0.3rem\"}}/> \n          {pendingTx\n            ? TranslateString(548, 'Collecting EGG')\n            : TranslateString(999, `Harvest all (${balancesWithValue.length})`)}\n          </button>\n          ) : (\n            <UnlockButton />\n          )} */}\n          <button\n            onClick={() => {\n              addToMetaMask()\n            }}\n            type=\"button\"\n            style={{\n              fontSize: '2rem',\n              fontWeight: 'bolder',\n              width: '10rem',\n              cursor: 'pointer',\n              border: '0.2rem solid #BEBEBE',\n              background: 'white',\n              height: '3rem',\n              display: 'flex',\n              justifyContent: 'space-evenly',\n              borderRadius: '1rem',\n            }}\n          >\n            <img src=\"/images/pure.png\" alt=\"\" style={{ width: '2.2rem', marginRight: '0.5rem' }} />+\n            <img\n              src=\"/images/meta.png\"\n              alt=\"\"\n              style={{ width: '1.9rem', marginLeft: '1rem', marginTop: '0.3rem' }}\n            />{' '}\n          </button>\n          <Block style={{ marginTop: '0.5rem' }}>\n            <Label>\n              <span className=\"megafarm\">UNIQ</span> to Harvest\n            </Label>\n            <CakeHarvestBalance earningsSum={earningsSum} />\n            <Text>~${(eggPrice * earningsSum).toFixed(2)}</Text>\n          </Block>\n          <Block>\n            <Label>\n              <span className=\"megafarm\">UNIQ</span> in Wallet\n            </Label>\n            <CakeWalletBalance cakeBalance={cakeBalance} />\n            <Text>~${(eggPrice * cakeBalance).toFixed(2)}</Text>\n          </Block>\n          <Actions>\n            {account ? (\n              <Button\n                id=\"harvest-all\"\n                disabled={balancesWithValue.length <= 0 || pendingTx}\n                onClick={harvestAllFarms}\n                fullWidth\n              >\n                {pendingTx\n                  ? TranslateString(548, 'Collecting EGG')\n                  : TranslateString(999, `Harvest all (${balancesWithValue.length})`)}\n              </Button>\n            ) : (\n              <UnlockButton />\n            )}\n          </Actions>\n        </CardBody>\n        <CardBody\n          style={{\n            display: 'inline-grid',\n            maxWidth: `${window.screen.width < 900 ? '330px' : '50%  '}`,\n            overflow: 'auto',\n            flexWrap: 'nowrap',\n            verticalAlign: 'bottom',\n          }}\n        >\n          <Flex>\n            <Card\n              style={{\n                background: 'linear-gradient(180deg,#f0c24a,#ef804b)',\n                padding: '8px',\n                margin: '8px',\n                width: '100%',\n                minWidth: '220px',\n                minHeight: '325px',\n                flexWrap: 'wrap',\n                display: 'flex',\n                boxShadow: 'none',\n                borderRadius: '20px',\n                verticalAlign: 'bottom',\n              }}\n            >\n              <div\n                style={{\n                  color: 'white',\n                  backgroundImage: `url(\"https://polycat.finance/img/apr-feature-texture.svg\")`,\n                  minHeight: '100%',\n                  minWidth: '100%',\n                  backgroundRepeat: 'no-repeat',\n                  backgroundPosition: 'right top',\n                  paddingLeft: '30px',\n                  paddingTop: '30px',\n                }}\n              >\n                <div style={{ minHeight: '50%' }}>\n                  <svg\n                    stroke=\"currentColor\"\n                    fill=\"currentColor\"\n                    strokeWidth=\"0\"\n                    viewBox=\"0 0 512 512\"\n                    color=\"white\"\n                    style={{ color: 'white' }}\n                    height=\"3em\"\n                    width=\"3em\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path d=\"M152.864 59l-4.21 20h33.816l-4.211-20zm3.698 38v14h18V97zm-30.715 32l-7.78 94h17.145l6-80h130.545l-2-14zm302.715 23v74.602a593.471 593.471 0 0 1 18 1.666V152zm-270.65 9l-4.651 62h6.3c10.003 0 19.544 4.28 29 10.645V161zm48.65 0v84.26l78 8.681v-21.296L274.327 161zm-121 80c-8 0-23.292 6.759-37.377 18.027-10.908 8.726-21.254 19.89-28.747 31.166l16.813 4.203C56.271 269.225 87.129 253 121.561 253c50.594 0 93.48 35.024 105.586 82h20.409c-9.132-18.739-23.077-40.212-38.323-57.889-9.33-10.819-19.063-20.19-27.945-26.601-8.881-6.412-16.88-9.51-21.726-9.51zm217 .059V351h32.15c9.085-30.155 26.196-50.771 49.125-61.193 12.31-5.596 25.987-8.305 40.736-8.578 11.399-.212 23.445 1.049 35.989 3.54v-36.49c-11.495-1.781-25.084-3.178-39.633-4.203-40.207-2.831-86.16-3-118.367-3.017zm176 10.814V271h14v-13.41c-3.978-2.698-9.906-4.606-14-5.717zM222.7 265.168c.054.063.11.123.164.186 19.996 23.183 37.843 51.59 47.086 75.386l4.762 12.26h-44.53c.247 2.97.38 5.97.38 9 0 7.178-.713 14.198-2.057 21h56.057V272.055zM121.562 271c-50.081 0-91 40.92-91 91s40.919 91 91 91c50.08 0 91-40.92 91-91s-40.92-91-91-91zm357 18v14h14v-14zm-357 4c38.16 0 69 30.84 69 69s-30.84 69-69 69c-38.161 0-69-30.84-69-69s30.839-69 69-69zm307.603 6.27c-12.894.164-27.37 2.264-37.879 6.923-16.839 7.654-29.674 21.545-37.691 44.807h10.57c13.936-22.718 39.012-38 67.397-38a77.97 77.97 0 0 1 29 5.6v-15.448c-11.185-2.416-21.683-3.723-31.397-3.882zM121.562 311c-28.588 0-51 22.413-51 51s22.412 51 51 51c28.587 0 51-22.413 51-51s-22.413-51-51-51zm357 10v7.67a80.334 80.334 0 0 1 14 13.357V321zm-47 10c-33.493 0-61 27.508-61 61 0 33.492 27.507 61 61 61 33.492 0 61-27.508 61-61 0-33.492-27.508-61-61-61zm0 22c21.516 0 39 17.484 39 39s-17.484 39-39 39c-21.517 0-39-17.484-39-39s17.483-39 39-39zm-129 16v15.377l50.01 8.334c-.003-.237-.01-.473-.01-.711 0-7.988 1.219-15.71 3.464-23zm129 2c-12.095 0-21 8.905-21 21s8.905 21 21 21c12.094 0 21-8.905 21-21s-8.906-21-21-21z\" />\n                  </svg>\n                  <Text color=\"white\" bold>\n                    In Farms\n                  </Text>\n                </div>\n\n                <div style={{ minHeight: '50%' }}>\n                  <Text color=\"white\">Earn Up To</Text>\n                  <Text color=\"white\" bold fontSize=\"20px\">\n                    999 %\n                  </Text>\n                  {/* <Text color=\"white\" bold fontSize=\"20px\">\n                    UNIQ-MATIC\n                  </Text> */}\n                  <Text color=\"white\">APR</Text>\n                </div>\n              </div>\n            </Card>\n            {/* <Card style={{ background: \"linear-gradient(180deg,#6ab8f9,#4970f6)\", padding: \"8px\", margin: \"8px\", width: \"100%\", minWidth: \"220px\", minHeight: \"325px\", flexWrap: \"wrap\", display: \"flex\", boxShadow: \"none\", borderRadius: \"20px\" }}>\n              <div style={{ color: \"white\", backgroundImage: `url(\"https://polycat.finance/img/vaults-feature-texture.svg\")`, minHeight: \"100%\", minWidth: \"100%\", backgroundRepeat: \"no-repeat\", backgroundPosition: \"right top\", paddingLeft: \"30px\", paddingTop: \"30px\" }}>\n                <div style={{ minHeight: \"50%\" }}>\n                  <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 512 512\" color=\"white\" style={{ color: \"white\" }} height=\"3em\" width=\"3em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M287.03 20c-39.133.48-79.73 15.297-117 45.938h80.47v43.188c52.76-29.75 114.592-31.588 163.938.03l-18.188 9.72 64.688 50.72-3.75-83.314-26.407 14.126C395.99 48.792 345.038 20.644 290.907 20c-1.288-.015-2.583-.016-3.875 0zm-268 64.625v212.75h212.782V84.625H19.032zm50.282 26.03H205.78v138.939h-18.718v-120.25H69.313v-18.688zm3.344 38.126l90.094 91.845-13.344 13.094-90.094-91.845 13.344-13.094zm206.656 61.75v212.782h212.75v-212.78h-212.75zm50.25 26.064h136.469V375.5h-18.686V255.28h-117.78l-.002-18.686zm3.344 38.094l90.125 91.875-13.342 13.062-90.125-91.844 13.343-13.092zm-278.53 63.656l3.75 83.312 23.312-12.47c60.927 88.637 169.99 106.485 259.625 32.814h-80.439v-43.188c-52.08 29.38-113 31.544-162.03 1.188l20.436-10.938-64.655-50.718z\" /></svg>\n\n                  <Text color=\"white\">\n                    In VAULTS\n                  </Text>\n                </div>\n                <div style={{ minHeight: \"50%\" }}>\n                  <Text color=\"white\">\n                    Auto-Compounding\n                  </Text>\n                  <Text color=\"white\" bold fontSize=\"20px\">\n                    UNIQ-USDC,\n                  </Text>\n                  <Text color=\"white\" bold fontSize=\"20px\">\n                    UNIQ-MATIC\n                  </Text>\n                  <Text color=\"white\">\n                    Available\n                  </Text>\n                </div>\n              </div>\n            </Card> */}\n            <Card\n              style={{\n                background: 'linear-gradient(180deg,#79db72,#71cca4)',\n                padding: '8px',\n                width: '100%',\n                margin: '8px',\n                minWidth: '220px',\n                minHeight: '325px',\n                flexWrap: 'wrap',\n                display: 'flex',\n                boxShadow: 'none',\n                borderRadius: '20px',\n              }}\n            >\n              <div\n                style={{\n                  color: 'white',\n                  backgroundImage: `url(\"https://polycat.finance/img/pool-feature-texture.svg\")`,\n                  minHeight: '100%',\n                  minWidth: '100%',\n                  backgroundRepeat: 'no-repeat',\n                  backgroundPosition: 'right top',\n                  paddingLeft: '30px',\n                  paddingTop: '30px',\n                }}\n              >\n                <div style={{ minHeight: '50%' }}>\n                  <svg\n                    stroke=\"currentColor\"\n                    fill=\"currentColor\"\n                    strokeWidth=\"0\"\n                    viewBox=\"0 0 512 512\"\n                    color=\"white\"\n                    style={{ color: 'white' }}\n                    height=\"3em\"\n                    width=\"3em\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path d=\"M288 133v18h160v-18H288zm41 34v16h78v-16h-78zM64 201c-5.75 0-10.406 1.939-15.074 6.023-4.668 4.085-9.078 10.48-12.701 18.631C28.978 241.96 25 265 25 288s3.978 46.041 11.225 62.346c3.623 8.152 8.033 14.546 12.7 18.63C53.595 373.062 58.25 375 64 375h5.055l2-17.994.89-8.006h80.11l2.888 26H183V201H64zm137 0v46h46v-46h-46zm64 0v174h28.055l2-17.994.89-8.006h80.11l2.888 26H448c5.75 0 10.406-1.94 15.074-6.023 4.668-4.085 9.08-10.48 12.703-18.631 7.247-16.304 11.225-39.343 11.225-62.342 0-23-3.976-46.04-11.223-62.344-3.623-8.152-8.034-14.55-12.703-18.635-4.668-4.084-9.326-6.024-15.076-6.025H265zm-64 64v46h46v-46h-46zm0 64v46h46v-46h-46zM88.057 367l-14 126h75.886l-13.998-126H88.057zm224 0l-14 126h75.886l-13.998-126h-47.888zM183 384v110h18v-37h46v37h18V384h-18v55h-46v-55h-18zm226 9v30h30v-30h-30zm6.803 48c5.844 19.928 16.417 32.884 28.318 40.563C462.214 493.235 482 493 490 493v-18c-8 0-23.214-.235-36.121-8.563-7.548-4.87-14.772-12.42-19.473-25.437h-18.603z\" />\n                  </svg>\n                  <Text color=\"white\" bold>\n                    In Pools\n                  </Text>\n                </div>\n                <div style={{ minHeight: '50%' }}>\n                  <div style={{ minHeight: '50%' }}>\n                    <Text color=\"white\">Stake Tokens</Text>\n                    <Text color=\"white\" fontSize=\"20px\">\n                      To Earn\n                    </Text>\n                    <Text color=\"white\" bold fontSize=\"20px\">\n                      UNIQ\n                    </Text>\n                    {/* <Text color=\"white\" bold fontSize=\"20px\">\n                      TOKENS\n                    </Text> */}\n                  </div>\n                </div>\n              </div>\n            </Card>\n          </Flex>\n        </CardBody>\n      </Two>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useGetStats } from 'hooks/api'\nimport { useTotalValue } from '../../../state/hooks'\nimport CardValue from './CardValue'\nimport CardValue2 from './CardValue2'\n\nconst StyledTotalValueLockedCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex: 1;\n`\n\nconst TotalValueLockedCard = () => {\n  const TranslateString = useI18n()\n  // const data = useGetStats()\n  const totalValue = useTotalValue()\n  // const tvl = totalValue.toFixed(2);\n\n  const Two = styled.div`\n    ${({ theme }) => theme.mediaQueries.sm} {\n      display: flex;\n      width: 20rem;\n      justify-content: space-between;\n      flex-direction: row;\n    }\n    width: auto;\n    display: flex;\n    flex-direction: column;\n  `\n\n  const Block = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  `\n  const Man = styled.div`\n    display: flex;\n    width: 7rem;\n    justify-content: space-between;\n    margin-top: 1rem;\n  `\n\n  return (\n    // <StyledTotalValueLockedCard>\n    <CardBody style={{ marginLeft: 'auto' }}>\n      <Heading size=\"lg\" mb=\"24px\" color=\"#787878\">\n        TOTAL VALUE LOCKED (TVL)\n      </Heading>\n      <>\n        {/* <Heading size=\"xl\">{`$${tvl}`}</Heading> */}\n        {/* <Heading size=\"xl\"> */}\n        <CardValue2 value={totalValue.toNumber()} prefix=\"$\" decimals={2} />\n        {/* </Heading> */}\n        {/* <Text color=\"textSubtle\">ACROSS ALL FARMS AND POOLS</Text> */}\n      </>\n      <Two>\n        <Man style={{ display: 'flex' }}>\n          <img src=\"/images/farm.png\" alt=\"farm\" style={{ width: '3.5rem' }} />\n          <Block>\n            <Heading>$ 0</Heading>\n            <Text>Farm</Text>\n          </Block>\n        </Man>\n        <Man>\n          <img src=\"/images/pools.png\" alt=\"vault\" style={{ width: '3.5rem' }} />\n          <Block>\n            <Heading>$ 0</Heading>\n            <Text>Pools</Text>\n          </Block>\n        </Man>\n      </Two>\n    </CardBody>\n    // </StyledTotalValueLockedCard>\n  )\n}\n\nexport default TotalValueLockedCard\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport MultiProgress, { IMultiProgressProps } from 'react-multi-progress'\nimport CardValue2 from './CardValue2'\nimport { useFarms, usePriceCakeBusd } from '../../../state/hooks'\nimport TotalValueLockedCard from './TotalValueLockedCard'\n\nconst StyledCakeStats = styled(Card)`\n  // margin-left: auto;\n  // margin-right: auto;\n\n  max-width: 58rem;\n  height: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 51rem;\n    margin-top: auto;\n    margin-right: auto;\n  }\n  margin-top: 1.5rem;\n`\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  margin-top: 1rem;\n  // padding: 1rem;\n  width: 100%;\n`\n\nconst RowStyle = styled.div`\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: flex;\n    justify-content: space-between;\n    flex-direction: row;\n  }\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(8rem, 1fr));\n  text-align: center;\n  // flex-direction: column;\n`\n\nconst Line = styled.div`\n  height: 0.2rem;\n  width: 90%;\n  background: orange;\n  margin-bottom: 1rem;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 0.2rem;\n    width: 100%;\n    background: orange;\n    margin: 1rem 0 0 0;\n  }-Make the add to metamask button functional\n  `\n\nconst Padding = styled.div`\n  padding: 1rem;\n`\n\n// const Body = styled.div`\n//   ${({ theme }) => theme.mediaQueries.sm}{\n//     display: flex;\n//     flex-direction: column;\n//   }\n//    flex-direction: column;\n//   `;\n\nconst CakeStats = () => {\n  const TranslateString = useI18n()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = useBurnedBalance(getCakeAddress())\n  const farms = useFarms()\n  const eggPrice = usePriceCakeBusd()\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0)\n  const cakeSupply = getBalanceNumber(circSupply)\n  const marketCap = eggPrice.times(circSupply)\n\n  let uniqPerBlock = 0\n  if (farms && farms[0] && farms[0].uniqPerBlock) {\n    uniqPerBlock = new BigNumber(farms[0].uniqPerBlock).div(new BigNumber(10).pow(18)).toNumber()\n  }\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <TotalValueLockedCard />\n        <Padding style={{ padding: '0 1.2rem 0 1.2rem' }}>\n          <Heading size=\"xl\" color=\"#787878\">\n            <span className=\"megafarm\">UNIQ</span> Stats\n            {/* {TranslateString(534, 'Egg Stats')} */}\n          </Heading>\n          {/* <TotalValueLockedCard /> */}\n          {/* <MultiProgress\n\t\t\ttransitionTime={1.2}\n\t\t\telements={[\n\t\t\t\t{\n\t\t\t\t\tvalue: 15,\n\t\t\t\t\tcolor: \"skyblue\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: 35,\n\t\t\t\t\tcolor: \"orange\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: 25,\n\t\t\t\t\tcolor: \"yellow\",\n\t\t\t\t},\n\t\t\t]}\n\t\t\theight={10}\n\t\t\tbackgroundColor=\"#F0F0F0\"\n\t\t\tborder=\"none\"\n\t\t/> */}\n          <RowStyle>\n            <Row>\n              <Line style={{ background: 'orange' }} />\n              <Padding>\n                <CardValue2 fontSize=\"30px\" value={getBalanceNumber(marketCap)} decimals={0} prefix=\"$\" />\n                <Text fontSize=\"16px\">{TranslateString(10005, 'Market Cap')}</Text>\n              </Padding>\n            </Row>\n            <Row>\n              <Line style={{ background: 'skyblue' }} />\n              <Padding>\n                {totalSupply && <CardValue2 fontSize=\"30px\" value={getBalanceNumber(totalSupply)} decimals={0} />}\n                <Text fontSize=\"16px\">{TranslateString(536, 'Total Minted')}</Text>\n              </Padding>\n            </Row>\n            <Row>\n              <Line style={{ background: 'yellow' }} />\n              <Padding>\n                <CardValue2 fontSize=\"30px\" value={getBalanceNumber(burnedBalance)} decimals={0} />\n                <Text fontSize=\"16px\">{TranslateString(538, 'Total Burned')}</Text>\n              </Padding>\n            </Row>\n            <Row>\n              <Line style={{ background: 'grey' }} />\n              <Padding style={{ padding: '0.1rem' }}>\n                {cakeSupply && <CardValue2 fontSize=\"30px\" value={cakeSupply} decimals={0} />}\n                <Text fontSize=\"18px\">{TranslateString(10004, 'Circulating Supply')}</Text>\n              </Padding>\n            </Row>\n            <Row>\n              <Line style={{ background: 'green' }} />\n              <Padding>\n                <Text bold fontSize=\"30px\">\n                  {uniqPerBlock}\n                </Text>\n                <Text fontSize=\"16px\">{TranslateString(540, 'New EGG/block')}</Text>\n              </Padding>\n            </Row>\n          </RowStyle>\n        </Padding>\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport { Timeline } from 'react-twitter-widgets'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\nimport { useFarms } from '../../../state/hooks'\n\nconst StyledTwitterCard = styled(Card)`\n  margin-left: auto;\n  // margin-right: auto;\n  // max-width: 25rem;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: auto;\n    width: 19rem;\n  }\n  margin-top: 2.5rem;\n  width: auto;\n`\n\n// const StyledTwitterCard = styled.div`\n//   background-color: #e1e1e1;\n//   box-shadow: 0px 0px 12px 0px #0000ff;\n//   max-width: 25rem;\n//   `;\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst TwitterCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTwitterCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\" color=\"#787878\">\n          News\n          {/* {TranslateString(10003, 'Announcements')} */}\n        </Heading>\n        <Timeline\n          dataSource={{\n            sourceType: 'profile',\n            screenName: 'dev',\n          }}\n          options={{\n            height: '370',\n            chrome: 'noheader, nofooter',\n            width: '400',\n          }}\n        />\n      </CardBody>\n    </StyledTwitterCard>\n  )\n}\n\nexport default TwitterCard\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout, Flex, Modal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport FarmStakingCard from './components/FarmStakingCard'\nimport LotteryCard from './components/LotteryCard'\nimport CakeStats from './components/CakeStats'\nimport TotalValueLockedCard from './components/TotalValueLockedCard'\nimport TwitterCard from './components/TwitterCard'\nimport CrossChain from './components/CrossChain'\nimport Change from './components/Change'\n\nconst Hero = styled.div`\n  align-items: center;\n  background-image: url('/images/logo.png');\n  background-repeat: no-repeat;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  padding-top: 116px;\n  text-align: center;\n  background-size: 170px 200px;\n  height: 205px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background-image: url('/images/logo.png');\n    background-position: center;\n    height: 205px;\n    background-size: 170px 200px;\n    padding-top: 0;\n  }\n`\n\nconst Cards2 = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 48px;\n  // display:inline-block;\n\n  & > div {\n    grid-column: span 4;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 4;\n    }\n  }\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 48px;\n  // display:inline-block;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst Two = styled.div`\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    flex-direction: row;\n    margin-top: 1.5rem;\n  }\n  flex-direction: column;\n`\n\nconst Style = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Row = styled.div`\n  width: 10rem;\n  display: flex;\n  justify-content: space-between;\n  margin: 0.5rem 0 0.5rem 0;\n  align-items: center;\n`\n\nconst Column = styled.div`\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: flex;\n    width: 25rem;\n    //  background: red;\n    justify-content: space-between;\n    flex-direction: column;\n    height: auto;\n    padding: 12px;\n  }\n  display: flex;\n  // background: yellow;\n  flex-direction: column;\n  width: auto;\n  height: auto;\n`\n\nconst Img = styled.img`\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 4rem;\n  }\n  width: 2.5rem;\n`\n\nconst Home: React.FC = () => {\n  const TranslateString = useI18n()\n  const [close, setclose] = useState(false)\n\n  return (\n    <Page>\n      <Hero>\n        {/* <Heading as=\"h1\" size=\"xl\" mb=\"24px\" color=\"secondary\">\n          {TranslateString(576, 'Goose Finance')}\n        </Heading> */}\n        {/* <Text>{TranslateString(578, 'Top 3 best DEFI app on Binance Smart Chain.')}</Text> */}\n      </Hero>\n      <Style>{/* <CrossChain setclose={() => setclose(!close)} /> */}</Style>\n      <FarmStakingCard />\n      <br />\n      {/* <Flex>\n\n          <CakeStats />\n          <TwitterCard />\n        </Flex> */}\n      {/* <br /> */}\n      {/* <Cards> */}\n      {/* <FarmStakingCard /> */}\n      {/* <TwitterCard /> */}\n      {/* <CakeStats />\n          <TwitterCard /> */}\n      {/* <TotalValueLockedCard /> */}\n      {/* </Cards> */}\n      <Two>\n        <CakeStats />\n        <TwitterCard />\n      </Two>\n\n      {close && (\n        <div style={{ position: 'fixed', top: '20%', left: '50%', transform: 'translate(-50%,-50%)' }}>\n          <Modal\n            title=\"Change Network\"\n            onDismiss={() => {\n              setclose(!close)\n            }}\n          >\n            {/* {''} */}\n            <Column>\n              <Row>\n                {' '}\n                <Img src=\"/images/binance.png\" alt=\"binace\" />\n                <Text>Binance</Text>\n              </Row>\n              <Row>\n                {' '}\n                <Img src=\"/images/polygon.png\" alt=\"polygon\" />\n                <Text>Polygon</Text>\n              </Row>\n            </Column>\n          </Modal>\n        </div>\n      )}\n      {/* <Change /> */}\n    </Page>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}