{"version":3,"sources":["utils/callHelpers.ts","../node_modules/cookie/index.js","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","hooks/useApprove.ts","../node_modules/universal-cookie/es6/utils.js","../node_modules/universal-cookie/es6/Cookies.js","../node_modules/universal-cookie/es6/index.js","hooks/useStake.ts","config/index.ts","components/layout/Flex.tsx","components/Tags.tsx","hooks/useUnstake.ts","hooks/useHarvest.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/Divider.tsx","views/Farms/Farms.tsx"],"names":["cookies","Cookies","rot13","s","replace","c","indexOf","approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","get","isAddress","ref","deposit","BigNumber","times","pow","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","tokenName","decimals","withdraw","harvest","soushHarvest","soushHarvestBnb","buy","presaleContract","tokenAddress","buyToken","claim","claimGoldIngot","exports","parse","str","TypeError","obj","opt","pairs","split","pairSplitRegExp","dec","decode","i","length","pair","eq_idx","key","substr","trim","val","slice","undefined","tryDecode","serialize","name","enc","encode","fieldContentRegExp","test","maxAge","isNaN","isFinite","Math","floor","domain","path","expires","toUTCString","httpOnly","secure","sameSite","toLowerCase","decodeURIComponent","encodeURIComponent","e","StyledSpacer","styled","div","props","size","Spacer","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","map","child","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","TranslateString","useI18n","toLocaleString","onClick","useApprove","dispatch","useDispatch","useWallet","useMasterchef","onApprove","useCallback","fetchFarmUserDataAsync","usePresaleBUSDApprove","busdContract","useBUSD","usePresale","useSousApprove","sousId","useSousChef","updateUserAllowance","readCookie","cleanValue","cleanupCookieValue","doNotParse","isParsingCookie","JSON","__assign","Object","assign","t","n","arguments","p","prototype","hasOwnProperty","call","apply","this","_this","changeListeners","HAS_DOCUMENT_COOKIE","cookie","parseCookies","Promise","document","catch","_updateBrowserValues","parseOptions","_emitChange","params","getAll","result","name_1","set","_a","stringify","remove","finalOptions","Date","addChangeListener","callback","push","removeChangeListener","idx","splice","useSousStake","isUsingBnb","handleStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","txHash","console","info","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","SYRUPIDS","useSousUnstake","includes","onUnstake","useUnstake","useHarvest","farmPid","onReward","useSousHarvest","handleHarvest","updateUserPendingReward","Wrapper","ExpandableSectionButton","expanded","aria-label","role","color","bold","defaultProps","getLiquidityUrlPathParts","quoteTokenAdresses","quoteTokenSymbol","tokenAddresses","firstPart","process","secondPart","StyledLinkExternal","LinkExternal","text","DetailsSection","isTokenOnly","bscScanAddress","removed","totalValueFormated","totalBTCValueFormatted","lpLabel","liquidityUrlPathParts","justifyContent","href","external","Flex","MultiplierTag","Tag","CardHeading","multiplier","farmImage","risk","tokenSymbol","depositFee","alignItems","mb","src","alt","width","height","flexDirection","DepositModal","onConfirm","onDismiss","useState","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","currentTarget","handleSelectMax","Number","toFixed","title","disabled","newval","fixForValues","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","lpTokenPrice","rawStakedBalance","getBalanceNumber","log","displayBalance","useModal","onPresentDeposit","onPresentWithdraw","mr","BalanceAndCompound","HarvestAction","earnings","rawEarningsBalance","Action","CardActions","farm","ethereum","setRequestedApproval","useFarmFromPid","lpAddresses","useFarmUser","allowance","lpAddress","lpName","lpSymbol","toUpperCase","isGreaterThan","useEffect","toNumber","getContract","error","textTransform","fontSize","pr","UnlockButton","mt","fullWidth","calculateCakeEarnedPerThousandDollars","number","numberOfDays","apyAsDecimal","farmApy","daysAsDecimalOfYear","principal","cakePrice","finalAmount","round","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","Text","ApyCalculatorModal","apy","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","ApyButton","onPresentApyModal","ml","RainbowLight","keyframes","StyledCardAccent","FCard","card","background","Divider","borderColor","ExpandingWrapper","FarmCard","bnbPrice","btcPrice","showExpandableSection","setShowExpandableSection","totalValue","lpTotalInQuoteToken","QuoteToken","BNB","CAKE","WBTC","lpTotalInBTC","maximumFractionDigits","totalValueFormatted","farmAPY","minimumFractionDigits","style","display","CardActionsContainer","FarmTabButtons","stakedOnly","setStakedOnly","useRouteMatch","url","isExact","ToggleWrapper","checked","activeIndex","as","Link","to","textSubtle","Farms","farmsProps","farmsLP","useFarms","usePriceCakeBusd","usePriceBnbBusd","tokenMode","fastRefresh","useRefresh","activeFarms","filter","inactiveFarms","stakedOnlyFarms","userData","farmsList","farmsToDisplay","cakeRewardPerYear","cswapPerBlock","poolWeight","comparedTo","Page","textAlign","exact","responsive"],"mappings":"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","file":"static/js/9.fcd128f4.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport Cookies from 'universal-cookie';\r\n// import rot13 from './encode'\r\nimport { isAddress } from './web3'\r\n\r\nconst cookies = new Cookies();\r\n\r\n\r\n\r\nfunction rot13(s) {\r\n  return s.replace(/[A-Z]/gi, c =>\r\n    \"NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm\"[\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".indexOf(c) ] )\r\n}\r\n\r\n\r\n\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  let ref\r\n  if(cookies.get('ref')) {\r\n    if(isAddress( rot13(cookies.get('ref')) )) {\r\n      ref = rot13(cookies.get('ref'))\r\n    }\r\n  } else {\r\n    ref = \"0x0000000000000000000000000000000000000000\"\r\n  }\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), ref)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account,tokenName) => {\r\n\r\n\r\n  let decimals;\r\n\r\n\r\n  if (tokenName === 'USDT' || tokenName === 'USDC') {\r\n    decimals = 6\r\n  } else if (tokenName === 'WBTC') {\r\n    decimals = 8\r\n  } else {\r\n    decimals = 18\r\n  }\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  let ref\r\n  if(cookies.get('ref')) {\r\n    if(isAddress( rot13(cookies.get('ref')) )) {\r\n      ref = rot13(cookies.get('ref'))\r\n    }\r\n  } else {\r\n    ref = \"0x0000000000000000000000000000000000000000\"\r\n  }\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0', ref)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const buy = async (presaleContract, tokenAddress, amount, account) => {\r\n  return presaleContract.methods\r\n    .buyToken()\r\n    .send({ from: account,value:new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const claim = async (presaleContract, account) => {\r\n  return presaleContract.methods\r\n    .claimGoldIngot()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n} ","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@lukkasromero/cswap-uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {depositFeeBP > 0 ? (\n        <StyledMaxText>\n          {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\n          {symbol}\n        </StyledMaxText>\n      ) : null}\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve, } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery ,usePresale,useBUSD} from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n\nexport const usePresaleBUSDApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const busdContract = useBUSD()\n  const presaleContract = usePresale()\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(busdContract, presaleContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, busdContract, presaleContract])\n\n  return { onApprove: handleApprove } \n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import * as cookie from 'cookie';\r\nexport function hasDocumentCookie() {\r\n    // Can we get/set cookies on document.cookie?\r\n    return typeof document === 'object' && typeof document.cookie === 'string';\r\n}\r\nexport function cleanCookies() {\r\n    document.cookie.split(';').forEach(function (c) {\r\n        document.cookie = c\r\n            .replace(/^ +/, '')\r\n            .replace(/=.*/, '=;expires=' + new Date().toUTCString() + ';path=/');\r\n    });\r\n}\r\nexport function parseCookies(cookies, options) {\r\n    if (typeof cookies === 'string') {\r\n        return cookie.parse(cookies, options);\r\n    }\r\n    else if (typeof cookies === 'object' && cookies !== null) {\r\n        return cookies;\r\n    }\r\n    else {\r\n        return {};\r\n    }\r\n}\r\nexport function isParsingCookie(value, doNotParse) {\r\n    if (typeof doNotParse === 'undefined') {\r\n        // We guess if the cookie start with { or [, it has been serialized\r\n        doNotParse =\r\n            !value || (value[0] !== '{' && value[0] !== '[' && value[0] !== '\"');\r\n    }\r\n    return !doNotParse;\r\n}\r\nexport function readCookie(value, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var cleanValue = cleanupCookieValue(value);\r\n    if (isParsingCookie(cleanValue, options.doNotParse)) {\r\n        try {\r\n            return JSON.parse(cleanValue);\r\n        }\r\n        catch (e) {\r\n            // At least we tried\r\n        }\r\n    }\r\n    // Ignore clean value if we failed the deserialization\r\n    // It is not relevant anymore to trim those values\r\n    return value;\r\n}\r\nfunction cleanupCookieValue(value) {\r\n    // express prepend j: before serializing a cookie\r\n    if (value && value[0] === 'j' && value[1] === ':') {\r\n        return value.substr(2);\r\n    }\r\n    return value;\r\n}\r\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as cookie from 'cookie';\r\nimport { hasDocumentCookie, parseCookies, readCookie } from './utils';\r\nvar Cookies = /** @class */ (function () {\r\n    function Cookies(cookies, options) {\r\n        var _this = this;\r\n        this.changeListeners = [];\r\n        this.HAS_DOCUMENT_COOKIE = false;\r\n        this.cookies = parseCookies(cookies, options);\r\n        new Promise(function () {\r\n            _this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\r\n        }).catch(function () { });\r\n    }\r\n    Cookies.prototype._updateBrowserValues = function (parseOptions) {\r\n        if (!this.HAS_DOCUMENT_COOKIE) {\r\n            return;\r\n        }\r\n        this.cookies = cookie.parse(document.cookie, parseOptions);\r\n    };\r\n    Cookies.prototype._emitChange = function (params) {\r\n        for (var i = 0; i < this.changeListeners.length; ++i) {\r\n            this.changeListeners[i](params);\r\n        }\r\n    };\r\n    Cookies.prototype.get = function (name, options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        return readCookie(this.cookies[name], options);\r\n    };\r\n    Cookies.prototype.getAll = function (options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        var result = {};\r\n        for (var name_1 in this.cookies) {\r\n            result[name_1] = readCookie(this.cookies[name_1], options);\r\n        }\r\n        return result;\r\n    };\r\n    Cookies.prototype.set = function (name, value, options) {\r\n        var _a;\r\n        if (typeof value === 'object') {\r\n            value = JSON.stringify(value);\r\n        }\r\n        this.cookies = __assign(__assign({}, this.cookies), (_a = {}, _a[name] = value, _a));\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, value, options);\r\n        }\r\n        this._emitChange({ name: name, value: value, options: options });\r\n    };\r\n    Cookies.prototype.remove = function (name, options) {\r\n        var finalOptions = (options = __assign(__assign({}, options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));\r\n        this.cookies = __assign({}, this.cookies);\r\n        delete this.cookies[name];\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, '', finalOptions);\r\n        }\r\n        this._emitChange({ name: name, value: undefined, options: options });\r\n    };\r\n    Cookies.prototype.addChangeListener = function (callback) {\r\n        this.changeListeners.push(callback);\r\n    };\r\n    Cookies.prototype.removeChangeListener = function (callback) {\r\n        var idx = this.changeListeners.indexOf(callback);\r\n        if (idx >= 0) {\r\n            this.changeListeners.splice(idx, 1);\r\n        }\r\n    };\r\n    return Cookies;\r\n}());\r\nexport default Cookies;\r\n","import Cookies from './Cookies';\r\nexport default Cookies;\r\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(15012000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@lukkasromero/cswap-uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number,tokenName:string) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n\n\n\n\n  \n\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account,tokenName)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid,tokenName],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      // if (sousId === 0) {\n      //   const txHash = await unstake(masterChefContract, 0, amount, account)\n      //   console.info(txHash)\n      // } else if (isOldSyrup) {\n      //   const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n      //   console.info(txHash)\n      // } else {\n      //   const txHash = await sousUnstake(sousChefContract, amount, account)\n      //   console.info(txHash)\n      // }\n      // dispatch(updateUserStakedBalance(sousId, account))\n      // dispatch(updateUserBalance(sousId, account))\n      // dispatch(updateUserPendingReward(sousId, account))\n    },\n    [],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@lukkasromero/cswap-uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\n// In the URL, using the quote token 'BNB' is represented by 'ETH'\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const firstPart = quoteTokenSymbol === 'BNB' ? 'ETH' : quoteTokenAdresses[chainId]\n  const secondPart = tokenAddresses[chainId]\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport useI18n from 'hooks/useI18n'\nimport styled from 'styled-components'\nimport { Text, Flex, Link, LinkExternal } from '@lukkasromero/cswap-uikit'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { Address } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\nimport { farmsConfig } from 'config/constants'\n\nexport interface ExpandableSectionProps {\n  isTokenOnly?: boolean\n  bscScanAddress?: string\n  removed?: boolean\n  totalValueFormated?: string\n  totalBTCValueFormatted?: string\n  lpLabel?: string\n  quoteTokenAdresses?: Address\n  quoteTokenSymbol?: string\n  tokenAddresses: Address\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  text-decoration: none;\n  font-weight: normal;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  align-items: center;\n\n  svg {\n    padding-left: 4px;\n    height: 18px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  isTokenOnly,\n  bscScanAddress,\n  removed,\n  totalValueFormated,\n  totalBTCValueFormatted,\n  lpLabel,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n}) => {\n  const TranslateString = useI18n()\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(316, 'Stake')}:</Text>\n        <StyledLinkExternal\n          href={\n            isTokenOnly\n              ? `https://quickswap.exchange/#/swap/${tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\n              : `https://quickswap.exchange/#/add/${liquidityUrlPathParts}`\n          }\n        >\n          {lpLabel}\n        </StyledLinkExternal>\n      </Flex>\n      {!removed && (\n        <Flex justifyContent=\"space-between\">\n          <Text>{TranslateString(23, 'Total Liquidity')}:</Text>\n          <Text>{totalValueFormated}</Text>\n        </Flex>\n      )}\n      {!removed && (\n        <Flex justifyContent=\"space-between\">\n          <Text>Total Liquidity (BTC):</Text>\n         <Text>{totalBTCValueFormatted}</Text>\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"flex-start\">\n        <Link external href={bscScanAddress} bold={false}>\n          {TranslateString(356, 'View on BscScan')}\n        </Link>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from '@lukkasromero/cswap-uikit'\nimport { CommunityTag, CoreTag, NoFeeTag, RiskTag } from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  risk?: number\n  depositFee?: number\n  farmImage?: string\n  tokenSymbol?: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 0.25rem;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  risk,\n  farmImage,\n  tokenSymbol,\n  depositFee,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Image src={`/images/farms/${farmImage}.png`} alt={tokenSymbol} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel}</Heading>\n        <Flex justifyContent=\"center\">\n          {depositFee === 0 ? <NoFeeTag /> : null}\n          {/* {isCommunityFarm ? <CommunityTag /> : <CoreTag />} */}\n          {/* <RiskTag risk={risk} /> */}\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@lukkasromero/cswap-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance, fixForValues } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  depositFeeBP?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' , depositFeeBP = 0}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    let decimals\n    if (tokenName === 'USDT' || tokenName === 'USDC') {\n      decimals = 6\n    } else if  (tokenName === 'WBTC') {\n      decimals = 8 \n    }  else {\n      decimals = 18\n    }\n    return getFullDisplayBalance(max, decimals)\n  }, [max, tokenName])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(Number(fullBalance).toFixed(2))\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        depositFeeBP={depositFeeBP}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            let newval:BigNumber\n            newval = new BigNumber(val)\n            if (tokenName === 'USDT' || tokenName === 'USDC') { \n              newval = fixForValues(newval, 12)\n            } else if (tokenName === 'WBTC') {\n              newval = fixForValues(newval, 10)\n            }\n            setPendingTx(true)\n            await onConfirm(newval.toString())\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@lukkasromero/cswap-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n\n  let decimals\n\n  if (tokenName === 'USDT' || tokenName === 'USDC') {\n    decimals = 6\n  } else if (tokenName === 'WBTC') {\n    decimals = 8\n  } else {\n    decimals = 18\n  }\n\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max,decimals)\n  }, [max,decimals])\n\n\n  \n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@lukkasromero/cswap-uikit'\nimport useI18n from 'hooks/useI18n'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  depositFeeBP?: number\n  lpTokenPrice?: number\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst TextStyle = styled.div`\n  font-size: 13px;\n  font-weight: 200;\n  margin-top: 8px;\n  color: #333333;\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({ stakedBalance, tokenBalance, tokenName, pid, depositFeeBP, lpTokenPrice}) => {\n  const TranslateString = useI18n()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid,tokenName)\n\n \n\n  const rawStakedBalance = getBalanceNumber(stakedBalance, 6)\n\n  console.log(\"rawStakedBalance\",stakedBalance.toString())\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(<DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />)\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    // return rawStakedBalance === 0 ? (\n    //   <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake')}</Button>\n    // ) : (\n    //   <IconButtonWrapper>\n    //     <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n    //       <MinusIcon color=\"primary\" />\n    //     </IconButton>\n    //     <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n    //       <AddIcon color=\"primary\" />\n    //     </IconButton>\n    //   </IconButtonWrapper>\n    // )\n\n    return  <IconButtonWrapper>\n    <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n      <MinusIcon color=\"primary\" />\n    </IconButton>\n    <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n      <AddIcon color=\"primary\" />\n    </IconButton>\n  </IconButtonWrapper>\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n        {/* { rawStakedBalance > 0 ? <TextStyle>~${(lpTokenPrice * rawStakedBalance).toFixed(2)}</TextStyle> : '' } */}\n      </Flex>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@lukkasromero/cswap-uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport styled from 'styled-components'\nimport useStake from '../../../../hooks/useStake'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n`\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const { onStake } = useStake(pid)\n\n  const rawEarningsBalance = getBalanceNumber(earnings)\n  const displayBalance = rawEarningsBalance.toLocaleString()\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      <BalanceAndCompound>\n        {/* {pid === 9 ? (\n          <Button\n            disabled={rawEarningsBalance === 0 || pendingTx}\n            size=\"sm\"\n            variant=\"secondary\"\n            marginBottom=\"15px\"\n            onClick={async () => {\n              setPendingTx(true)\n              await onStake(rawEarningsBalance.toString())\n              setPendingTx(false)\n            }}\n          >\n            {TranslateString(999, 'Compound')}\n          </Button>\n        ) : null} */}\n        <Button\n          disabled={rawEarningsBalance === 0 || pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n        >\n          {TranslateString(999, 'Harvest')}\n        </Button>\n      </BalanceAndCompound>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import React, { useMemo, useState,useEffect, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { provider } from 'web3-core'\nimport { getContract } from 'utils/erc20'\nimport { Button, Flex, Text } from '@lukkasromero/cswap-uikit'\nimport { Farm } from 'state/types'\nimport { useFarmFromPid, useFarmFromSymbol, useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\nimport { useApprove } from 'hooks/useApprove'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  ethereum?: provider\n  account?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account }) => {\n  const TranslateString = useI18n()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID]\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n\n  useEffect(()=>{\n    console.log(\"stakedBalance\",stakedBalance.toNumber())\n  },[stakedBalance])\n  const lpContract = useMemo(() => {\n    if (isTokenOnly) {\n      return getContract(ethereum as provider, tokenAddress)\n    }\n    return getContract(ethereum as provider, lpAddress)\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n\n\n  \n    return  <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={lpName}\n        pid={pid}\n        depositFeeBP={depositFeeBP}\n      />\n    // return isApproved ? (\n    //   <StakeAction\n    //     stakedBalance={stakedBalance}\n    //     tokenBalance={tokenBalance}\n    //     tokenName={lpName}\n    //     pid={pid}\n    //     depositFeeBP={depositFeeBP}\n    //   />\n    // ) : (\n    //   <Button mt=\"8px\" fullWidth disabled={requestedApproval} onClick={handleApprove}>\n    //     {TranslateString(999, 'Approve Contract')}\n    //   </Button>\n    // )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\n          CSWAP\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(999, 'Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(999, 'Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","const roundToTwoDp = (number) => Math.round(number * 100) / 100\n\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, cakePrice }) => {\n  // Everything here is worked out relative to a year, with the asset compounding daily\n  const timesCompounded = 365\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const apyAsDecimal = farmApy / 100\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\n  const principal = 1000 / cakePrice\n\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\n  const interestEarned = finalAmount - principal\n  return roundToTwoDp(interestEarned)\n}\n\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage.toFixed(2)\n}\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex } from '@lukkasromero/cswap-uikit'\nimport useI18n from 'hooks/useI18n'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\nimport { Address } from 'config/constants/types'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: BigNumber\n  quoteTokenAdresses?: Address\n  quoteTokenSymbol?: string\n  tokenAddresses: Address\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  lpLabel,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n  cakePrice,\n  apy,\n}) => {\n  const TranslateString = useI18n()\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\n\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, cakePrice })\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, cakePrice })\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, cakePrice })\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, cakePrice })\n\n  return (\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(999, 'Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(999, 'ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(999, 'CSWAP per $1000')}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>1d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>7d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>30d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>365d(APY)</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Description fontSize=\"12px\" color=\"textSubtle\">\n        {TranslateString(\n          999,\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n        )}\n      </Description>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={`https://exchange.pancakeswap.finance/#/add/${liquidityUrlPathParts}`}>\n          {TranslateString(999, 'Get')} {lpLabel}\n        </LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { CalculateIcon, IconButton, useModal } from '@lukkasromero/cswap-uikit'\nimport { Address } from 'config/constants/types'\nimport ApyCalculatorModal from './ApyCalculatorModal'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: BigNumber\n  quoteTokenAdresses?: Address\n  quoteTokenSymbol?: string\n  tokenAddresses: Address\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({\n  lpLabel,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n  cakePrice,\n  apy,\n}) => {\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      lpLabel={lpLabel}\n      quoteTokenAdresses={quoteTokenAdresses}\n      quoteTokenSymbol={quoteTokenSymbol}\n      tokenAddresses={tokenAddresses}\n      cakePrice={cakePrice}\n      apy={apy}\n    />,\n  )\n\n  return (\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\n      <CalculateIcon />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@lukkasromero/cswap-uikit'\nimport { communityFarms } from 'config/constants'\nimport { Farm } from 'state/types'\nimport { provider } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { QuoteToken } from 'config/constants/types'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  bnbPrice?: BigNumber\n  btcPrice?: BigNumber\n  ethereum?: provider\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, btcPrice,ethereum, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  // const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n  const farmImage = farm.isTokenOnly\n    ? farm.tokenSymbol.toLowerCase()\n    : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\n\n  const totalValue: BigNumber = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n      return cakePrice.times(farm.lpTotalInQuoteToken)\n    }\n\n    if (farm.quoteTokenSymbol === QuoteToken.WBTC) {\n      \n      return btcPrice.times(farm.lpTotalInQuoteToken)\n    }\n    return farm.lpTotalInQuoteToken\n  }, [bnbPrice,btcPrice, cakePrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\n\n  const totalBTCValueFormatted = farm.lpTotalInBTC\n    ? `${Number(farm.lpTotalInBTC).toLocaleString(undefined, { maximumFractionDigits: 8 })}`\n    : '-'\n\n  const totalValueFormatted = totalValue\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  \n\n  const lpLabel = farm.lpSymbol\n  const earnLabel = 'CSWAP'\n  const farmAPY =\n    farm.apy &&\n    farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses, risk } = farm\n\n  return (\n    <FCard>\n      {farm.tokenSymbol === 'CSWAP' && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        risk={risk}\n        depositFee={farm.depositFeeBP}\n        farmImage={farmImage}\n        tokenSymbol={farm.tokenSymbol}\n      />\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{TranslateString(352, 'APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apy ? (\n              <>\n                <ApyButton\n                  lpLabel={lpLabel}\n                  quoteTokenAdresses={quoteTokenAdresses}\n                  quoteTokenSymbol={quoteTokenSymbol}\n                  tokenAddresses={tokenAddresses}\n                  cakePrice={cakePrice}\n                  apy={farm.apy}\n                />\n                {farmAPY}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\n        <Text bold style={{ fontSize: '24px' }}>\n          {farm.depositFeeBP / 100}%\n        </Text>\n      </Flex>\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          isTokenOnly={farm.isTokenOnly}\n          bscScanAddress={\n            farm.isTokenOnly\n              ? `https://polygonscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\n              : `https://polygonscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\n          }\n          totalValueFormated={totalValueFormatted}\n          totalBTCValueFormatted ={totalBTCValueFormatted}\n          lpLabel={lpLabel}\n          quoteTokenAdresses={quoteTokenAdresses}\n          quoteTokenSymbol={quoteTokenSymbol}\n          tokenAddresses={tokenAddresses}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, Text, Toggle } from '@lukkasromero/cswap-uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst FarmTabButtons = ({ stakedOnly, setStakedOnly }) => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ToggleWrapper>\n        <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} />\n        <Text> {TranslateString(699, 'Staked only')}</Text>\n      </ToggleWrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(698, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(700, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 32px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Image, Heading } from '@lukkasromero/cswap-uikit'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport Divider from './components/Divider'\n\nexport interface FarmsProps {\n  tokenMode?: boolean\n}\n\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  \n  const bnbPrice  = usePriceBnbBusd()\n\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { tokenMode } = farmsProps\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n        //   return farm\n        // }\n\n\n        console.log(\"farmsList1\",farm)\n        const cakeRewardPerBlock = new BigNumber(farm.cswapPerBlock || 1)\n          .times(new BigNumber(farm.poolWeight))\n          .div(new BigNumber(10).pow(18))\n\n\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n        let apy = cakePrice.times(cakeRewardPerYear)\n\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0)\n\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          totalValue = totalValue.times(bnbPrice)\n        }\n\n\n        // if (farm.quoteTokenSymbol === QuoteToken.WBTC) {\n\n        //   totalValue = btcPrice.times(totalValue)\n        // }\n\n\n        if (totalValue.comparedTo(0) > 0) {\n           apy = apy.div(totalValue)\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard\n          key={farm.pid}\n          farm={farm}\n          removed={removed}\n          bnbPrice={bnbPrice}\n          cakePrice={cakePrice}\n          ethereum={ethereum}\n          account={account}\n        />\n      ))\n    },\n    [bnbPrice, account, cakePrice, ethereum],\n  )\n\n  return (\n    <Page>\n      <Heading as=\"h1\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        {tokenMode\n          ? TranslateString(10002, 'Stake tokens to earn EGG')\n          : TranslateString(320, 'Stake LP tokens to earn EGG')}\n      </Heading>\n      <Heading as=\"h2\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        {TranslateString(10000, 'Deposit Fee will be used to buyback EGG')}\n      </Heading>\n      <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly} />\n      <div>\n        <Divider />\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsList(inactiveFarms, true)}\n          </Route>\n        </FlexLayout>\n      </div>\n      <Image src=\"/images/egg/8.png\" alt=\"illustration\" width={1352} height={587} responsive />\n    </Page>\n  )\n}\n\nexport default Farms\n"],"sourceRoot":""}