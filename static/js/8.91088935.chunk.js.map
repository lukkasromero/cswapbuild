{"version":3,"sources":["components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","views/Home/components/CardValue.tsx","hooks/useTokenBalance.ts","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","hooks/useHarvest.ts","hooks/useApprove.ts","hooks/useStake.ts","config/index.ts","components/layout/Flex.tsx","components/Tags.tsx","hooks/useUnstake.ts","hooks/useBlock.ts","views/Profit/components/CakeStats.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Profit/components/DepositModal.tsx","views/Profit/components/WithdrawModal.tsx","views/Profit/components/CompoundModal.tsx","views/Profit/components/CardTitle.tsx","views/Profit/components/Card.tsx","views/Profit/components/OldSyrupTitle.tsx","views/Profit/components/HarvestButton.tsx","views/Profit/components/CardFooter.tsx","views/Profit/components/PoolCard.tsx","views/Profit/components/PoolTabButtons/index.tsx","views/Profit/components/Divider.tsx","views/Profit/Profit.tsx"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","CardValue","value","decimals","fontSize","prefix","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","useEffect","current","bold","useMaticBalance","useWallet","balance","account","useState","BigNumber","maticBalance","setMaticBalance","fastRefresh","useRefresh","a","fetchBalance","useTotalSupply","slowRefresh","totalSupply","setTotalSupply","cakeContract","getContract","cakeABI","getCakeAddress","methods","call","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","setBalance","balanceOf","bal","useTokenBalance","ethereum","getTokenBalance","res","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","TranslateString","useI18n","toLocaleString","onClick","times","toString","useHarvest","farmPid","dispatch","useDispatch","masterChefContract","useMasterchef","onReward","useCallback","harvest","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","pid","Promise","all","useSousHarvest","sousId","isUsingBnb","sousChefContract","useSousChef","handleHarvest","soushHarvestBnb","soushHarvest","updateUserPendingReward","updateUserBalance","useApprove","lpContract","onApprove","approve","tx","usePresaleBUSDApprove","busdContract","useBUSD","presaleContract","usePresale","useSousApprove","updateUserAllowance","useSousStake","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","onStake","useStake","console","info","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","SYRUPIDS","useSousUnstake","isOldSyrup","includes","onUnstake","unstake","sousEmegencyUnstake","sousUnstake","useUnstake","useBlock","BlockContext","Card","CakeStats","burnedBalance","farms","useFarms","block","circSupply","minus","blocksTillProfit","CSWAPPerBlock","pow","toNumber","as","Math","StyledLabel","isFinished","Label","text","StyledText","Text","isDisabled","color","textDisabled","Balance","unit","previousValue","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","fullWidth","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","id","CardTitle","card","background","isActive","Title","ActionLink","OldSyrupTitle","hasBalance","href","target","StyledButton","button","padding","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","PoolCategory","BINANCE","CORE","COMMUNITY","StyledFooter","isDark","StyledDetailsButton","Details","Row","FlexFull","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","style","marginBottom","role","aria-label","getBalanceNumber","memo","RainbowLight","keyframes","StyledCardAccent","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","image","stakingTokenName","stakingTokenAddress","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","isBnbPool","depositFee","stakingTokenContract","useERC20","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","QuoteToken","SYRUP","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","flex","src","width","height","alt","HarvestButton","justifyContent","UnlockButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","textSubtle","Hero","Farm","path","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","find","f","tokenSymbol","stakingTokenFarm","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","BUSD","priceToBnb","quoteTokenSymbol","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","mb","Divider","Flex","exact","orderBy"],"mappings":"+SAOA,IAuBMA,EAAeC,IAAOC,IAAV,KACN,SAACC,GAAD,OAAWA,EAAMC,QAClB,SAACD,GAAD,OAAWA,EAAMC,QAGbC,EA5BuB,SAAC,GAAqB,IAGtDC,EAHqD,IAAlBF,YAAkB,MAAX,KAAW,EACjDG,EAAYC,qBAAWC,KAAvBF,QAGR,OAAQH,GACN,IAAK,KACHE,EAAIC,EAAQ,GACZ,MACF,IAAK,KACHD,EAAIC,EAAQ,GACZ,MACF,IAAK,KACL,QACED,EAAIC,EAAQ,GAGhB,OAAO,cAACP,EAAD,CAAcI,KAAME,K,wRClB7B,IAcMI,EAAqBT,IAAOC,IAAV,KAEF,SAACC,GAAD,OAAWA,EAAMQ,MAAMC,OAAOC,eAGvC,SAACV,GAAD,OAAWA,EAAMQ,MAAMJ,QAAQ,MAGtCO,EAAoBb,IAAOC,IAAV,KAKRa,EA3BgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1BC,EAAIC,IAAMC,SAASC,QAAQJ,GAAUK,OAC3C,OACE,cAACX,EAAD,UACGQ,IAAMC,SAASG,IAAIN,GAAU,SAACO,EAAOC,GAAR,OAC5B,qCACE,cAACV,EAAD,UAAoBS,IACnBC,EAAIP,EAAI,GAAK,cAAC,EAAD,c,qECwBTQ,IAzB6B,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,SAA0C,IAAhCC,gBAAgC,MAArB,OAAqB,EAAbC,EAAa,EAAbA,OAAa,EAClEC,qBAAW,CACrCC,MAAO,EACPC,IAAKN,EACLO,SAAU,EACVC,UAAW,IACXP,cAEeQ,IAAbR,EAAyBA,EAAWD,EAAQ,EAAI,EAAIA,EAAQ,IAAM,EAAI,IAPlEU,EADsF,EACtFA,QAASC,EAD6E,EAC7EA,OAUXC,EAAcC,iBAAOF,GAM3B,OAJAG,qBAAU,WACRF,EAAYG,QAAQf,KACnB,CAACA,EAAOY,IAGT,eAAC,IAAD,CAAMI,MAAI,EAACd,SAAUA,EAArB,UACGC,EACAO,O,sPCDMO,EAAkB,WAAO,IAAD,EAC6BC,cAAzDC,EAD4B,EAC5BA,QAAQC,EADoB,EACpBA,QADoB,EAGKC,mBAAS,IAAIC,IAAU,IAH5B,mBAG5BC,EAH4B,KAGdC,EAHc,KAI3BC,EAAgBC,cAAhBD,YAYR,OAVAX,qBAAU,WAKJM,GAJc,uCAAG,sBAAAO,EAAA,sDACnBH,EAAgB,IAAIF,IAAUH,IADX,2CAAH,oDAKhBS,KAED,CAACR,EAASD,EAASM,IAEfF,GAMIM,EAAiB,WAAO,IAC3BC,EAAgBJ,cAAhBI,YAD0B,EAEIT,qBAFJ,mBAE3BU,EAF2B,KAEdC,EAFc,KAclC,OAVAlB,qBAAU,WAAM,4CACd,8BAAAa,EAAA,6DACQM,EAAeC,YAAYC,EAASC,eAD5C,SAEuBH,EAAaI,QAAQN,cAAcO,OAF1D,OAEQC,EAFR,OAGEP,EAAe,IAAIV,IAAUiB,IAH/B,4CADc,uBAAC,WAAD,wBAOdC,KACC,CAACV,IAEGC,GAGIU,EAAmB,SAACC,GAA0B,IAAD,EAC1BrB,mBAAS,IAAIC,IAAU,IADG,mBACjDH,EADiD,KACxCwB,EADwC,KAEhDb,EAAgBJ,cAAhBI,YAYR,OAVAhB,qBAAU,YACU,uCAAG,8BAAAa,EAAA,6DACbM,EAAeC,YAAYC,EAASC,eADvB,SAEDH,EAAaI,QAAQO,UAAU,8CAA8CN,OAF5E,OAEbO,EAFa,OAGnBF,EAAW,IAAIrB,IAAUuB,IAHN,2CAAH,qDAMlBjB,KACC,CAACc,EAAcZ,IAEXX,GAGM2B,IA5ES,SAACJ,GAA0B,IAAD,EAClBrB,mBAAS,IAAIC,IAAU,IADL,mBACzCH,EADyC,KAChCwB,EADgC,OAEuBzB,cAA/DE,EAFwC,EAExCA,QAAS2B,EAF+B,EAE/BA,SACTtB,EAAgBC,cAAhBD,YAaR,OAXAX,qBAAU,WAMJM,GAAW2B,GALG,uCAAG,4BAAApB,EAAA,sEACDqB,YAAgBD,EAAUL,EAActB,GADvC,OACb6B,EADa,OAEnBN,EAAW,IAAIrB,IAAU2B,IAFN,2CAAH,oDAMhBrB,KAED,CAACR,EAAS2B,EAAUL,EAAcjB,IAE9BN,I,gjBCfT,IAUM+B,EAAqB3E,IAAOC,IAAV,KAEF,SAACC,GAAD,OAAWA,EAAMQ,MAAMC,OAAOiE,SACjC,SAAC1E,GAAD,OAAWA,EAAMQ,MAAMmE,MAAMC,WAGjC,SAAC5E,GAAD,OAAWA,EAAMQ,MAAMJ,QAAQ,MAGxCyE,EAAc/E,IAAO4E,MAAV,KAIN,SAAC1E,GAAD,OAAWA,EAAMQ,MAAMC,OAAOqE,WAS1BC,EAhCqB,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,aAAcC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,eAAgB5D,EAAY,EAAZA,MAC1F,OACE,eAACkD,EAAD,aACKU,GAAkBA,EACrB,cAACN,EAAD,CAAaK,YAAaA,EAAa3D,MAAOA,EAAO0D,SAAUA,MAC5DD,GAAgBA,M,ilBCDzB,IAiCMI,EAAmBtF,IAAOC,IAAV,KAEhBF,EAAeC,IAAOC,IAAV,KACP,SAACC,GAAD,OAAWA,EAAMQ,MAAMJ,QAAQ,MAGpCiF,EAA8BvF,IAAOC,IAAV,KAK3BuF,EAAgBxF,IAAOC,IAAV,KAER,SAACC,GAAD,OAAWA,EAAMQ,MAAMC,OAAOqE,WAQnCS,EAAoBzF,IAAO0F,KAAV,KACZ,SAACxF,GAAD,OAAWA,EAAMQ,MAAMC,OAAOqE,WAI1BW,EA3D+B,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,IAAKC,EAA6D,EAA7DA,OAAQV,EAAqD,EAArDA,SAAUW,EAA2C,EAA3CA,YAAarE,EAA8B,EAA9BA,MAA8B,IAAvBsE,oBAAuB,MAAR,EAAQ,EAC3GC,EAAkBC,cACxB,OACE,eAACX,EAAD,WACE,eAACE,EAAD,WACGI,EAAIM,iBADP,IAC0BL,EAD1B,IACmCG,EAAgB,IAAK,gBAExD,cAAC,EAAD,CACEd,aACE,eAACK,EAAD,WACE,cAACE,EAAD,UAAoBI,IACpB,cAAC9F,EAAD,IACA,8BACE,cAAC,IAAD,CAAQI,KAAK,KAAKgG,QAASL,EAA3B,SACGE,EAAgB,IAAK,cAK9Bb,SAAUA,EACVC,YAAY,IACZ3D,MAAOA,IAERsE,EAAe,EACd,eAACP,EAAD,WACGQ,EAAgB,MAAO,eAD1B,KAC4C,IAAIjD,IAAUtB,GAAS,GAAG2E,MAAML,EAAe,KAAOM,WAAY,IAC3GR,KAED,U,6NCpCGS,EAAa,SAACC,GACzB,IAAMC,EAAWC,cACT5D,EAAYF,cAAZE,QACF6D,EAAqBC,cAQ3B,MAAO,CAAEC,SANaC,sBAAW,sBAAC,4BAAAzD,EAAA,sEACX0D,YAAQJ,EAAoBH,EAAS1D,GAD1B,cAC1BkE,EAD0B,OAEhCP,EAASQ,YAAuBnE,IAFA,kBAGzBkE,GAHyB,2CAI/B,CAAClE,EAAS2D,EAAUD,EAASG,MAKrBO,EAAgB,SAACC,GAAwB,IAC5CrE,EAAYF,cAAZE,QACF6D,EAAqBC,cAU3B,MAAO,CAAEC,SARaC,sBAAW,sBAAC,4BAAAzD,EAAA,6DAC1B+D,EAAkBD,EAASE,QAAO,SAACC,EAAOC,GAC9C,MAAM,GAAN,mBAAWD,GAAX,CAAkBP,YAAQJ,EAAoBY,EAAKzE,OAClD,IAH6B,kBAKzB0E,QAAQC,IAAIL,IALa,2CAM/B,CAACtE,EAASqE,EAAUR,MAKZe,EAAiB,SAACC,GAAgC,IAAxBC,EAAuB,wDACtDnB,EAAWC,cAD2C,EAExC9D,cAAZE,EAFoD,EAEpDA,QACF+E,EAAmBC,YAAYH,GAC/BhB,EAAqBC,cAErBmB,EAAgBjB,sBAAW,sBAAC,sBAAAzD,EAAA,yDACjB,IAAXsE,EAD4B,gCAExBZ,YAAQJ,EAAoB,EAAG7D,GAFP,kCAGrB8E,EAHqB,iCAIxBI,YAAgBH,EAAkB/E,GAJV,gDAMxBmF,YAAaJ,EAAkB/E,GANP,QAQhC2D,EAASyB,YAAwBP,EAAQ7E,IACzC2D,EAAS0B,YAAkBR,EAAQ7E,IATH,4CAU/B,CAACA,EAAS2D,EAAUmB,EAAYjB,EAAoBkB,EAAkBF,IAEzE,MAAO,CAAEd,SAAUkB,K,8NC5CRK,EAAa,SAACC,GACzB,IAAM5B,EAAWC,cACT5D,EAAiCF,cAAjCE,QACF6D,EAAqBC,cAY3B,MAAO,CAAE0B,UAVaxB,sBAAW,sBAAC,4BAAAzD,EAAA,+EAEbkF,YAAQF,EAAY1B,EAAoB7D,GAF3B,cAExB0F,EAFwB,OAG9B/B,EAASQ,YAAuBnE,IAHF,kBAIvB0F,GAJuB,0DAMvB,GANuB,yDAQ/B,CAAC1F,EAAS2D,EAAU4B,EAAY1B,MAMxB8B,EAAwB,WAAO,IAClC3F,EAAiCF,cAAjCE,QACF4F,EAAeC,cACfC,EAAkBC,cAUxB,MAAO,CAAEP,UATaxB,sBAAW,sBAAC,4BAAAzD,EAAA,+EAEbkF,YAAQG,EAAcE,EAAiB9F,GAF1B,cAExB0F,EAFwB,yBAGvBA,GAHuB,0DAKvB,GALuB,yDAO/B,CAAC1F,EAAS4F,EAAcE,MAMhBE,EAAiB,SAACT,EAAsBV,GACnD,IAAMlB,EAAWC,cACT5D,EAAiCF,cAAjCE,QACF+E,EAAmBC,YAAYH,GAYrC,MAAO,CAAEW,UAVaxB,sBAAW,sBAAC,4BAAAzD,EAAA,+EAEbkF,YAAQF,EAAYR,EAAkB/E,GAFzB,cAExB0F,EAFwB,OAG9B/B,EAASsC,YAAoBpB,EAAQ7E,IAHP,kBAIvB0F,GAJuB,0DAMvB,GANuB,yDAQ/B,CAAC1F,EAAS2D,EAAU4B,EAAYR,EAAkBF,O,iJCnC1CqB,EAAe,SAACrB,GAAgC,IAAxBC,EAAuB,wDACpDnB,EAAWC,cADyC,EAEtC9D,cAAZE,EAFkD,EAElDA,QACF6D,EAAqBC,cACrBiB,EAAmBC,YAAYH,GAE/BsB,EAAcnC,sBAAW,uCAC7B,WAAOoC,GAAP,SAAA7F,EAAA,yDACiB,IAAXsE,EADN,gCAEUwB,YAAMxC,EAAoB,EAAGuC,EAAQpG,GAF/C,kCAGa8E,EAHb,iCAIUwB,YAAavB,EAAkBqB,EAAQpG,GAJjD,gDAMUuG,YAAUxB,EAAkBqB,EAAQpG,GAN9C,QAQE2D,EAAS6C,YAAwB3B,EAAQ7E,IACzC2D,EAAS0B,YAAkBR,EAAQ7E,IATrC,4CAD6B,sDAY7B,CAACA,EAAS2D,EAAUmB,EAAYjB,EAAoBkB,EAAkBF,IAGxE,MAAO,CAAE4B,QAASN,IAGLO,IAzCE,SAACjC,GAChB,IAAMd,EAAWC,cACT5D,EAAYF,cAAZE,QACF6D,EAAqBC,cAW3B,MAAO,CAAE2C,QATWzC,sBAAW,uCAC7B,WAAOoC,GAAP,eAAA7F,EAAA,sEACuB8F,YAAMxC,EAAoBY,EAAK2B,EAAQpG,GAD9D,OACQkE,EADR,OAEEP,EAASQ,YAAuBnE,IAChC2G,QAAQC,KAAK1C,GAHf,2CAD6B,sDAM7B,CAAClE,EAAS2D,EAAUE,EAAoBY,O,iCClB5C,+CAEAvE,IAAU2G,OAAO,CACfC,eAAgB,IAChBC,eAAgB,KAGY,IAAI7G,IAAU,GAArC,IACM8G,EAAkB,IAAI9G,IAAU,U,oTCN7C,IAAM+G,E,KAAa9J,EAAOC,IAAV,KAaD6J,O,oMCZTC,EAAW,kBACf,cAAC,IAAD,CAAKC,QAAQ,UAAUC,SAAO,EAACC,UAAW,cAAC,IAAD,IAA1C,sBAWIC,EAAU,kBACd,cAAC,IAAD,CAAKH,QAAQ,YAAYC,SAAO,EAACC,UAAW,cAAC,IAAD,IAA5C,mBAKIE,EAAe,kBACnB,cAAC,IAAD,CAAKJ,QAAQ,aAAaC,SAAO,EAACC,UAAW,cAAC,IAAD,IAA7C,wBAKIG,EAAa,kBACjB,cAAC,IAAD,CAAKL,QAAQ,UAAUC,SAAO,EAACC,UAAW,cAAC,IAAD,IAA1C,uB,iJCCII,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAErBC,EAAiB,SAAC7C,GAC7B,IAAMlB,EAAWC,cACT5D,EAAYF,cAAZE,QACF6D,EAAqBC,cACrBiB,EAAmBC,YAAYH,GAC/B8C,EAAaF,EAASG,SAAS/C,GAqBrC,MAAO,CAAEgD,UAnBa7D,sBAAW,uCAC/B,WAAOoC,GAAP,mBAAA7F,EAAA,yDACiB,IAAXsE,EADN,gCAEyBiD,YAAQjE,EAAoB,EAAGuC,EAAQpG,GAFhE,OAEUkE,EAFV,OAGIyC,QAAQC,KAAK1C,GAHjB,2BAIayD,EAJb,kCAKyBI,YAAoBhD,EAAkBqB,EAAQpG,GALvE,QAKUkE,EALV,OAMIyC,QAAQC,KAAK1C,GANjB,yCAQyB8D,YAAYjD,EAAkBqB,EAAQpG,GAR/D,QAQUkE,EARV,OASIyC,QAAQC,KAAK1C,GATjB,QAWEP,EAAS6C,YAAwB3B,EAAQ7E,IACzC2D,EAAS0B,YAAkBR,EAAQ7E,IACnC2D,EAASyB,YAAwBP,EAAQ7E,IAb3C,4CAD+B,sDAgB/B,CAACA,EAAS2D,EAAUgE,EAAY9D,EAAoBkB,EAAkBF,MAM3DoD,IAhDI,SAACxD,GAClB,IAAMd,EAAWC,cACT5D,EAAYF,cAAZE,QACF6D,EAAqBC,cAW3B,MAAO,CAAE+D,UATa7D,sBAAW,uCAC/B,WAAOoC,GAAP,eAAA7F,EAAA,sEACuBuH,YAAQjE,EAAoBY,EAAK2B,EAAQpG,GADhE,OACQkE,EADR,OAEEP,EAASQ,YAAuBnE,IAChC2G,QAAQC,KAAK1C,GAHf,2CAD+B,sDAM/B,CAAClE,EAAS2D,EAAUE,EAAoBY,O,oPCf7ByD,EALE,WAEf,OADsBxK,qBAAWyK,M,kYCQXhL,YAAOiL,IAAPjL,CAAH,KAKTA,IAAOC,IAAV,KALT,IAwCeiL,EA3BG,WAChB,IAAM1H,EAAcF,cACd6H,EAAgBjH,YAAiBL,eACjCuH,EAAQC,cACRC,EAAQP,IACRQ,EAAa/H,EAAcA,EAAYgI,MAAML,GAAiB,IAAIpI,IAAU,GAC5E0I,EAAmB,IAAI1I,IAAU,QAA8ByI,MAAMD,GAO3E,OAJIH,GAASA,EAAM,IAAMA,EAAM,GAAGM,eAChB,IAAI3I,IAAUqI,EAAM,GAAGM,eAAezL,IAAI,IAAI8C,IAAU,IAAI4I,IAAI,KAAKC,WAIrF,cAAC,IAAD,CAASC,GAAG,KAAZ,SACGJ,GACC,cAACjK,EAAA,EAAD,CACEG,SAAS,OACTF,MAAOqK,KAAKlG,IAAI,SAAW0F,EAAO,GAClC5J,SAAU,EACVE,OAAO,oC,2ICrCjB,IAIMmK,EAAc/L,IAAOC,IAAV,KACN,gBAAG+L,EAAH,EAAGA,WAAH,SAAetL,MAAkBC,OAAOqL,EAAa,eAAiB,cAIlEC,EATqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASF,kBAAT,gBAClC,cAACD,EAAD,CAAaC,WAAYA,EAAzB,SAAsCE,K,qJCQxC,IAAMC,EAAanM,YAAOoM,IAAPpM,CAAH,KACL,gBAAGqM,EAAH,EAAGA,WAAYC,EAAf,EAAeA,MAAO5L,EAAtB,EAAsBA,MAAtB,OAAmC2L,EAAa3L,EAAMC,OAAO4L,aAAeD,KAGjFE,EAAkC,SAAC,GAA4D,IAA1D/K,EAAyD,EAAzDA,MAAOE,EAAkD,EAAlDA,SAAU2K,EAAwC,EAAxCA,MAAO5K,EAAiC,EAAjCA,SAAU2K,EAAuB,EAAvBA,WAAYI,EAAW,EAAXA,KACjFC,EAAgBpK,iBAAO,GAM7B,OAJAC,qBAAU,WACRmK,EAAclK,QAAUf,IACvB,CAACA,IAGF,eAAC0K,EAAD,CAAY1J,MAAI,EAAC6J,MAAOA,EAAO3K,SAAUA,EAAU0K,WAAYA,EAA/D,UACE,cAAC,IAAD,CAASvK,MAAO4K,EAAclK,QAAST,IAAKN,EAAOC,SAAUA,EAAUM,SAAU,EAAGC,UAAU,MAC7FR,GAASgL,GAAQ,+BAAOA,QAK/BD,EAAQG,aAAe,CACrBhL,SAAU,OACV0K,YAAY,EACZC,MAAO,OACP5K,SAAU,GAGG8K,Q,mBCqBAI,GAjDmC,SAAC,GAAmD,IAAjDhH,EAAgD,EAAhDA,IAAKiH,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,UAAgC,IAArBC,iBAAqB,MAAT,GAAS,IAC7EjK,mBAAS,IADoE,mBAC5FkK,EAD4F,KACvFC,EADuF,OAEjEnK,oBAAS,GAFwD,mBAE5FoK,EAF4F,KAEjFC,EAFiF,KAG7FnH,EAAkBC,cAClBmH,EAAcC,mBAAQ,WAC1B,OAAOC,YAAsB1H,KAC5B,CAACA,IAEE2H,EAAe1G,uBACnB,SAAC2G,GACCP,EAAOO,EAAEC,cAAchM,SAEzB,CAACwL,IAGGS,EAAkB7G,uBAAY,WAClCoG,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,IAAD,CAAOU,MAAK,UAAK3H,EAAgB,IAAK,WAA1B,YAAwC+G,EAAxC,WAA4DD,UAAWA,EAAnF,UACE,cAACnH,GAAA,EAAD,CACElE,MAAOuL,EACPlH,YAAa4H,EACbvI,SAAUoI,EACV3H,IAAKwH,EACLvH,OAAQkH,IAEV,eAACjM,EAAA,EAAD,WACE,cAAC,IAAD,CAAQ8M,WAAS,EAAC5D,QAAQ,YAAY7D,QAAS2G,EAA/C,SACG9G,EAAgB,IAAK,YAExB,cAAC,IAAD,CACE4H,WAAS,EACTC,SAAUX,EACV/G,QAAO,sBAAE,sBAAA/C,EAAA,6DACP+J,GAAa,GADN,SAEDN,EAAUG,GAFT,OAGPG,GAAa,GACbL,IAJO,2CAHX,SAUGI,EAAYlH,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,oBCM5E8H,GAhDqC,SAAC,GAAmD,IAAjDjB,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAWlH,EAA0B,EAA1BA,IAA0B,IAArBmH,iBAAqB,MAAT,GAAS,IAC/EjK,mBAAS,IADsE,mBAC9FkK,EAD8F,KACzFC,EADyF,OAEnEnK,oBAAS,GAF0D,mBAE9FoK,EAF8F,KAEnFC,EAFmF,KAG/FnH,EAAkBC,cAClBmH,EAAcC,mBAAQ,WAC1B,OAAOC,YAAsB1H,KAC5B,CAACA,IAEE2H,EAAe1G,uBACnB,SAAC2G,GACCP,EAAOO,EAAEC,cAAchM,SAEzB,CAACwL,IAGGS,EAAkB7G,uBAAY,WAClCoG,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,IAAD,CAAOU,MAAK,mBAAcZ,GAAaD,UAAWA,EAAlD,UACE,cAACnH,GAAA,EAAD,CACEG,YAAa4H,EACbvI,SAAUoI,EACV9L,MAAOuL,EACPpH,IAAKwH,EACLvH,OAAQkH,IAEV,eAACjM,EAAA,EAAD,WACE,cAAC,IAAD,CAAQkJ,QAAQ,YAAY7D,QAAS2G,EAArC,SACG9G,EAAgB,IAAK,YAExB,cAAC,IAAD,CACE6H,SAAUX,EACV/G,QAAO,sBAAE,sBAAA/C,EAAA,6DACP+J,GAAa,GADN,SAEDN,EAAUG,GAFT,OAGPG,GAAa,GACbL,IAJO,2CAFX,SASGI,EAAYlH,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,oB,uKCxC3F,IAqCe+H,GArCoC,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,SAAUnB,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,UAAgC,KAArBC,UAClDjK,oBAAS,IAD8D,mBAClGoK,EADkG,KACvFC,EADuF,KAEnGnH,EAAkBC,cAClBmH,EAAcC,mBAAQ,WAC1B,OAAOC,YAAsBU,KAC5B,CAACA,IAEJ,OACE,eAAC,IAAD,CACEL,MAAK,UAAK3H,EAAgB,IAAK,YAA1B,iBACL8G,UAAWA,EAFb,UAIE,cAACmB,GAAD,UACE,cAAC,EAAD,CAASxM,MAAOyM,OAAOd,OAEzB,eAACtM,EAAA,EAAD,WACE,cAAC,IAAD,CAAQ8M,WAAS,EAAC5D,QAAQ,YAAY7D,QAAS2G,EAA/C,SACG9G,EAAgB,IAAK,YAExB,cAAC,IAAD,CACEmI,GAAG,gBACHP,WAAS,EACTC,SAAUX,EACV/G,QAAO,sBAAE,sBAAA/C,EAAA,6DACP+J,GAAa,GADN,SAEDN,EAAUO,GAFT,OAGPD,GAAa,GACbL,IAJO,2CAJX,SAWGI,EAAYlH,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,oBASrFiI,GAAajO,IAAOC,IAAV,M,8KCjDhB,IAQemO,GARGpO,IAAOC,IAAV,MACJ,gBAAG+L,EAAH,EAAGA,WAAH,SAAetL,MAAkBC,OAAOqL,EAAa,eAAiB,W,wTCLjF,IAcef,GAdFjL,IAAOC,IAAV,MACM,SAACC,GAAD,OAAWA,EAAMQ,MAAM2N,KAAKC,cAIjC,gBAAGtC,EAAH,EAAGA,WAAH,SAAetL,MAAkBC,OAAOqL,EAAa,eAAiB,gBACjE,qBAAGuC,SAEX,oEACA,iF,iRCHR,IAAMC,GAAQxO,IAAOC,IAAV,MAOLwO,GAAazO,IAAOoD,EAAV,MA2BDsL,GAtBwB,SAAC,GAA4B,IAAD,IAAzBC,WACxC,YADiE,SAG7D,gCACE,cAACH,GAAD,8BACA,cAACC,GAAD,CACEG,KAAK,6FACLC,OAAO,SAFT,sCAWJ,8BACE,cAAC,GAAD,CAAW7C,YAAU,EAArB,yB,igCCrBN,I,GAiEM8C,GAAe9O,IAAO+O,OAAV,MAEF,SAAC7O,GAAD,OAAaA,EAAM2N,SAAP,OAAkB3N,EAAMQ,MAAM2N,KAAKC,cAGpD,SAACpO,GAAD,OAAaA,EAAM2N,SAAP,uBAGR,SAAC3N,GAAD,OAAWA,EAAMyB,YAEpB,SAACzB,GAAD,OAAWA,EAAMC,QAGX,SAACD,GAAD,OAAWA,EAAM8O,WAChB,SAAC9O,GAAD,OAAWA,EAAM8O,WAChB,SAAC9O,GAAD,OAAaA,EAAM2N,SAAuB,YAAZ3L,KAE5B,SAAChC,GAAD,OAAaA,EAAM2N,SAAP,oBAO5BoB,GAAajP,YAAOkP,KAAPlP,CAAH,MAOF,SAACE,GAAD,OAAYA,EAAMQ,MAAMJ,QAAQ,MAC/B,SAACJ,GAAD,OAAWA,EAAMQ,MAAMJ,QAAQ,MAIxC6O,GAAqBnP,IAAOoD,EAAV,MAOV,SAAClD,GAAD,OAAYA,EAAMQ,MAAMJ,QAAQ,MAC/B,SAACJ,GAAD,OAAWA,EAAMQ,MAAMJ,QAAQ,MAI/B8O,GAjHuB,SAAC,GAA2D,IAK5FC,EACAC,EACA3N,EAPmCZ,EAAwD,EAAxDA,SAAU8M,EAA8C,EAA9CA,SAAUe,EAAoC,EAApCA,KAAMzI,EAA8B,EAA9BA,QAAShG,EAAqB,EAArBA,KAAM+L,EAAe,EAAfA,KAAMqD,EAAS,EAATA,GAAS,EACnEhP,qBAAWC,KAA/BG,EADuF,EACvFA,OAAQL,EAD+E,EAC/EA,QACVkP,EAAc7O,EAAO2N,WAM3B,OAAQnO,GACN,IAAK,KACHmP,EAAgBhP,EAAQ,GACxB+O,EAAa,GACb1N,EAAW,GACX,MACF,IAAK,KACH2N,EAAgBhP,EAAQ,GACxB+O,EAAa,GACb1N,EAAW,GACX,MACF,IAAK,KACL,QACE2N,EAAgBhP,EAAQ,GACxB+O,EAAa,GACb1N,EAAW,GAGf,IAAM8N,EAAcpC,mBAAQ,WAC1B,OAAIkC,EACK,cAACN,GAAD,CAAYM,GAAIA,EAAhB,SAAqBrD,IAE1B0C,EAEA,cAACO,GAAD,CAAoBP,KAAMA,EAAMC,OAAO,UAAvC,SACG3C,IAIAA,IACN,CAAC0C,EAAM1C,EAAMqD,IAEhB,OACE,eAACT,GAAD,CACEY,UAtCAA,UAuCApD,MAAOkD,EACP3B,SAAUA,EACVlM,SAAUA,EACVwE,QAASA,EACT6I,QAASM,EACTnP,KAAMkP,EAPR,UASGtO,EACA0O,M,6kCCzDP,IAAME,IAAI,sBACPC,IAAaC,QAAUxF,MADhB,gBAEPuF,IAAaE,KAAO3F,MAFb,gBAGPyF,IAAaG,UAAY3F,MAHlB,IAeJ4F,GAAehQ,IAAOC,IAAV,MACQ,qBAAGS,MAAmBuP,OAAS,UAAY,aAC1D,gBAAGjE,EAAH,EAAGA,WAAH,SAAetL,MAAkBC,OAAOqL,EAAa,gBAAkB,eAI5EkE,GAAsBlQ,IAAO+O,OAAV,MAId,SAAC7O,GAAD,OAAWA,EAAMQ,MAAMC,OAAOqE,WAkBnCmL,GAAUnQ,IAAOC,IAAV,MAIPmQ,GAAMpQ,IAAOC,IAAV,MAKHoQ,GAAWrQ,IAAOC,IAAV,MAGRgM,GAAQjM,IAAOC,IAAV,MASLqQ,IANYtQ,IAAOoD,EAAV,MAMqB,SAAC,GAO/B,EANJmN,YAMK,IALLC,EAKI,EALJA,YACAC,EAII,EAJJA,gBACAzE,EAGI,EAHJA,WACA0E,EAEI,EAFJA,iBACAC,EACI,EADJA,aACI,EACwB7N,oBAAS,GADjC,mBACG8N,EADH,KACWC,EADX,KAEE7K,EAAkBC,cAClB6K,EAAOF,EAASG,KAAYC,KAG5BC,EAAMtB,GAAKgB,GAEjB,OACE,eAACX,GAAD,CAAchE,WAAYA,EAA1B,UACE,eAAC,GAAD,WACE,cAACqE,GAAD,UACE,cAACY,EAAD,MAEF,eAACf,GAAD,CAAqB/J,QATP,kBAAM0K,GAAWD,IAS/B,UACGA,EAAS,OAAS,UADrB,IACgC,cAACE,EAAD,UAGjCF,GACC,eAACT,GAAD,WACE,eAAC,GAAD,CAAKe,MAAO,CAAEC,aAAc,OAA5B,UACE,cAACd,GAAD,UACE,eAAC,GAAD,WACE,sBAAMe,KAAK,MAAMC,aAAW,QAA5B,SACC,MAEArL,EAAgB,IAAK,cAG1B,cAAC,EAAD,CAASrE,SAAS,OAAO0K,WAAYL,EAAYvK,MAAO6P,YAAiBd,QAE1EE,EAAmB,GAClB,eAAC,GAAD,WACE,cAACL,GAAD,UACE,eAAC,GAAD,WAAQrK,EAAgB,IAAK,SAA7B,SAEF,cAAC,EAAD,CAASrE,SAAS,OAAO0K,WAAYL,EAAYvK,MAAOiP,EAAkBhP,SAAU,OAGlE,IAArBgP,GAA0BD,EAAkB,GAC3C,eAAC,GAAD,WACE,cAACJ,GAAD,UACE,eAAC,GAAD,WAAQrK,EAAgB,IAAK,OAA7B,SAEF,cAAC,EAAD,CAASrE,SAAS,OAAO0K,WAAYL,EAAYvK,MAAOgP,EAAiB/O,SAAU,eASlFT,OAAMsQ,KAAKjB,I,quDC3G1B,IAAMkB,GAAeC,YAAH,MAYZC,GAAmB1R,IAAOC,IAAV,KAgBPuR,IAmNTG,GAAmB3R,IAAOC,IAAV,MAWhB2R,GAAoB5R,IAAOC,IAAV,MAQjB4R,GAAqB7R,IAAOC,IAAV,MAOlB6R,GAAqB9R,IAAOC,IAAV,MACZ,SAACC,GAAD,OAAWA,EAAMQ,MAAMJ,QAAQ,MAChC,SAACJ,GAAD,OAAWA,EAAMQ,MAAMJ,QAAQ,MAGpCyR,GAAgB/R,IAAOC,IAAV,MAKJ+R,GAnO0B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCvK,EAiBEuK,EAjBFvK,OACAwK,EAgBED,EAhBFC,MACAnF,EAeEkF,EAfFlF,UACAoF,EAcEF,EAdFE,iBACAC,EAaEH,EAbFG,oBACA7B,EAYE0B,EAZF1B,YACAzJ,EAWEmL,EAXFnL,QACAuL,EAUEJ,EAVFI,IACAC,EASEL,EATFK,cACA3B,EAQEsB,EARFtB,aACAH,EAOEyB,EAPFzB,YACA+B,EAMEN,EANFM,WACAC,EAKEP,EALFO,SACAxG,EAIEiG,EAJFjG,WACAyG,EAGER,EAHFQ,SACAC,EAEET,EAFFS,aAIIC,GAFFV,EADFW,WAGgBjC,IAAiBf,IAAaC,SAC1C7J,EAAkBC,cAClB4M,EAAuBC,YAASV,GAC9BvP,EAAYF,cAAZE,QACFyI,EAAQP,IACN1C,EAAcQ,YAAegK,EAAsBnL,GAAnDW,UACAiB,EAAYP,YAAarB,EAAQiL,GAAjCrJ,QACAoB,EAAcH,YAAe7C,GAA7BgD,UACA9D,EAAaa,YAAeC,EAAQiL,GAApC/L,SA7B6C,EA+BH9D,oBAAS,GA/BN,mBA+B9CiQ,EA/B8C,KA+B3BC,EA/B2B,OAgCnBlQ,oBAAS,GAhCU,mBAgC9CoK,EAhC8C,KAgCnCC,GAhCmC,KAkC/C8F,GAAY,IAAIlQ,KAAkB,OAAR0P,QAAQ,IAARA,OAAA,EAAAA,EAAUQ,YAAa,GACjDC,GAAsB,IAAInQ,KAAkB,OAAR0P,QAAQ,IAARA,OAAA,EAAAA,EAAUS,sBAAuB,GACrEC,GAAgB,IAAIpQ,KAAkB,OAAR0P,QAAQ,IAARA,OAAA,EAAAA,EAAUU,gBAAiB,GACzDnF,GAAW,IAAIjL,KAAkB,OAAR0P,QAAQ,IAARA,OAAA,EAAAA,EAAUW,gBAAiB,GAEpD1C,GAAmB5E,KAAKlG,IAAI2M,EAAajH,EAAO,GAChDmF,GAAkB3E,KAAKlG,IAAI4M,EAAWlH,EAAO,GAC7Cd,GAAa2H,IAAqBkB,IAAWC,MAC7CC,IAAuC,OAAbJ,SAAa,IAAbA,QAAA,EAAAA,GAAevH,YAAa,EACtD4H,IAAiBD,KAA4BN,GAAUrH,aAAe+G,EACtEc,GAAezH,GAAcuH,GAE7BG,GAAiB,IAAI3Q,IAAU2P,GAAciB,aAAa,IAAI5Q,IAAU,IAAI4I,IAAI2G,IA9CjC,GA+C1BsB,YACzB,cAAC,GAAD,CACEhO,IAAK8M,GAAgBQ,GAAoBW,cAAcH,IAAkBA,GAAiBR,GAC1FrG,UAAWvD,EACXyD,UAAW2F,EAAY,UAAMP,EAAN,aAA2BO,EAA3B,SAAiDP,KAJrE2B,GA/C8C,wBAuDzBF,YAC1B,cAAC,GAAD,CAAe5F,SAAUA,GAAUnB,UAAWvD,EAASyD,UAAWoF,KAD7D4B,GAvD8C,wBA2DzBH,YAC1B,cAAC,GAAD,CAAehO,IAAKuN,GAAetG,UAAWnC,EAAWqC,UAAWoF,KAD/D6B,GA3D8C,qBA+D/CC,GAAgBpN,sBAAW,sBAAC,sBAAAzD,EAAA,sEAE9B4P,GAAqB,GAFS,SAGT3K,IAHS,eAM5B2K,GAAqB,GANO,gDAS9BxJ,QAAQ0K,MAAR,MAT8B,yDAW/B,CAAC7L,EAAW2K,IAEf,OAEE,eAAC,GAAD,CAAMzE,SAAUkF,GAAczH,WAAYA,GAAyB,IAAXtE,EAAxD,UAC6B,UAA1BuK,EAAKE,kBAAgC,cAACT,GAAD,IACrC1F,GAAyB,IAAXtE,GAAgB,cAACiK,GAAD,IAC/B,sBAAKT,MAAO,CAAElC,QAAS,QAAvB,UACE,eAAC,GAAD,CAAWhD,WAAYA,GAAyB,IAAXtE,EAArC,UACG8C,IAAc,QADjB,IAC2BuC,EAD3B,IACuC/G,EAAgB,IAAK,WAE5D,sBAAKkL,MAAO,CAAEC,aAAc,MAAOgD,QAAS,OAAQC,WAAY,UAAhE,UACE,qBAAKlD,MAAO,CAAEmD,KAAM,GAApB,SACE,cAAC,IAAD,CAAOC,IAAG,yBAAoBpC,GAASnF,EAA7B,QAA8CwH,MAAO,GAAIC,OAAQ,GAAIC,IAAK1H,MAErFlK,GAAWiE,IAAY0D,IACtB,cAACkK,GAAD,CACE7G,UAAWG,GAASpC,YAAcsB,EAClChB,KAAMgB,EAAY,aAAe,UACjC/G,QAAO,sBAAE,sBAAA/C,EAAA,6DACP+J,IAAa,GADN,SAEDvG,IAFC,OAGPuG,IAAa,GAHN,gDAQb3C,GAYA,cAAC,GAAD,CAAemE,WAAY4E,KAX3B,eAAC1B,GAAD,WACE,cAAC,EAAD,CAASpQ,MAAO6P,YAAiBtD,GAAUsE,GAAgBjG,WAAYL,IAC3D,IAAXtE,GAAgB7E,GAAWiE,GAC1B,cAAC4N,GAAD,CACE7G,UAAWG,GAASpC,YAAcsB,EAClChB,KAAkBlG,EAAgB,IAA5BkH,EAAiC,cAAsC,YAC7E/G,QAAS4N,QAOjB,cAAC,EAAD,CAAO/H,WAAYA,GAAyB,IAAXtE,EAAcwE,KAAI,UAAKa,EAAL,aACnD,eAAC,IAAD,CAAM4H,eAAe,gBAArB,UACA,eAAC,IAAD,CAAMzD,MAAO,CAAEvP,SAAU,QAAzB,UAAoCqE,EAAgB,MAAO,eAA3D,OACA,eAAC,IAAD,CAAMvD,MAAI,EAACyO,MAAO,CAAEvP,SAAU,QAA9B,UACGsQ,EAAKW,WADR,UAIA,eAAChB,GAAD,YACI/O,GAAW,cAAC+R,EAAA,EAAD,IACZ/R,IACE2Q,KAAkBhJ,GACjB,qBAAK0G,MAAO,CAAEmD,KAAM,GAApB,SACE,cAAC,IAAD,CAAQxG,SAAU7B,GAAc+G,EAAmB5M,QAAS8N,GAAerG,WAAS,EAApF,2BACcuE,OAIhB,qCACE,cAAC,IAAD,CACEtE,SAAUsF,GAAc0B,GAAG,IAAI9R,IAAU,KAAOmK,EAChD/G,QACEqE,GAAU,sBACN,sBAAApH,EAAA,6DACE+J,IAAa,GADf,SAEQzC,EAAU,KAFlB,OAGEyC,IAAa,GAHf,2CAKA6G,GATR,2BAYc7B,KAEd,cAACL,GAAD,KACEtH,IACA,cAAC,IAAD,CAAYqD,SAAU7B,GAAyB,IAAXtE,EAAcvB,QAAS2N,GAA3D,SACE,cAAC,IAAD,CAASxH,MAAM,wBAM3B,eAACyF,GAAD,WACE,sBAAKb,MAAO,CAAEmD,KAAM,GAApB,UAA0BrO,EAAgB,IAAK,OAA/C,OACCgG,GAAcxB,KAAe6H,IAA7B,OAAoCA,QAApC,IAAoCA,OAApC,EAAoCA,EAAKyC,YAAW,OAACzC,QAAD,IAACA,OAAD,EAACA,EAAK0C,YACzD,IAEA,cAAC,EAAD,CAASpT,SAAS,OAAO0K,WAAYL,EAAYvK,MAAK,OAAE4Q,QAAF,IAAEA,OAAF,EAAEA,EAAKzG,WAAYlK,SAAU,EAAG+K,KAAK,SAG/F,eAACsF,GAAD,WACE,qBAAKb,MAAO,CAAEmD,KAAM,GAApB,SACE,sBAAMjD,KAAK,MAAMC,aAAYc,EAA7B,SACA,sBAAKjB,MAAO,CAAEmD,KAAM,GAApB,UACGrO,EAAgB,IAAK,cADxB,IAEE,cAAC,IAAD,CAAOsO,IAAG,yBAAoBnC,EAApB,QAA4CoC,MAAO,GAAIC,OAAQ,GAAIC,IAAI,UAAW,WAOhG,cAAC,EAAD,CAAS9S,SAAS,OAAO0K,WAAYL,EAAYvK,MAAO6P,YAAiB6B,YAG7E,cAAC,GAAD,CACE5C,YAAaA,EACbC,YAAaA,EACbC,gBAAiBA,GACjBzE,WAAYA,EACZ0E,iBAAkBA,GAClBC,aAAcA,Q,uKC9PtB,IAkBeqE,GAlBQ,WAAO,IAAD,EACFC,cAAjBC,EADmB,EACnBA,IAAKC,EADc,EACdA,QACPnP,EAAkBC,cAExB,OACE,cAACmP,GAAD,UACE,eAAC,IAAD,CAAYC,YAAcF,EAAc,EAAJ,EAAOhV,KAAK,KAAK6J,QAAQ,SAA7D,UACE,cAAC,IAAD,CAAgB6B,GAAIqD,KAAMK,GAAE,UAAK2F,GAAjC,SACGlP,EAAgB,IAAK,YAExB,cAAC,IAAD,CAAgB6F,GAAIqD,KAAMK,GAAE,UAAK2F,EAAL,YAA5B,SACGlP,EAAgB,IAAK,oBAS1BoP,GAAUpV,IAAOC,IAAV,M,2JCxBED,WAAOC,IAAtB,MACsB,qBAAGS,MAAkBC,OAAO2U,c,4jBCmBlD,IAsFMC,GAAOvV,IAAOC,IAAV,MAEC,qBAAGS,MAAkBC,OAAOqE,WA4BxBwQ,GApHQ,WAAO,IACpBC,EAASR,cAATQ,KACFzP,EAAkBC,cAChBpD,EAAYF,cAAZE,QACFuI,EAAQC,cACRqK,EAAQC,YAAS9S,GACjB+S,EAAcC,cACdvK,EAAQP,IAaR+K,EAAeJ,EAAMrU,KAAI,SAAC4Q,GAC9B,IAAMU,EAAYV,EAAKtB,eAAiBf,IAAaC,QAC/CkG,EAAkB3K,EAAM4K,MAAK,SAACC,GAAD,OAAOA,EAAEC,cAAgBjE,EAAKlF,aAC3DoJ,EAAmB/K,EAAM4K,MAAK,SAAC3V,GAAD,OAAOA,EAAE6V,cAAgBjE,EAAKE,oBAG5DiE,EAAyBzD,EAAY,IAAI5P,IAAU,GAAK,IAAIA,IAAJ,OAAcoT,QAAd,IAAcA,OAAd,EAAcA,EAAkBE,mBAOxFC,EAxBW,SAACvJ,EAAmBwJ,EAAuBC,GAC5D,IAAMC,EAAe,IAAI1T,IAAUwT,GACnC,MAAkB,QAAdxJ,EACK,IAAIhK,IAAU,GAEnBwT,GAAcC,IAAenD,IAAWqD,KACnCD,EAAaxW,IAAI2V,GAEnBa,EAUuBE,CAC5B1E,EAAKlF,UADiC,OAEtCgJ,QAFsC,IAEtCA,OAFsC,EAEtCA,EAAiBM,kBAFqB,OAGtCN,QAHsC,IAGtCA,OAHsC,EAGtCA,EAAiBa,kBAGmCxQ,MAAM6L,EAAK4E,eAAezQ,MAAMyD,KAEhFiN,EAA0BV,EAAuBhQ,MAAMkL,YAAiBW,EAAKzB,cAC7E6B,EAAMiE,EAAwBrW,IAAI6W,GAAyB1Q,MAAM,KAEvE,OAAO,2BACF6L,GADL,IAEEjG,WAA4B,IAAhBiG,EAAKvK,SAAuBuK,EAAKjG,YAAcV,EAAQ2G,EAAKO,UACxEH,WAzCuB,EA6CQ0E,IAAUjB,GAAc,SAAC7D,GAAD,OAAUA,EAAKjG,cA7C/C,mBA6CpBgL,EA7CoB,KA6CLC,EA7CK,KA+C3B,OACE,eAACC,EAAA,EAAD,WACE,eAAC3B,GAAD,WACE,gCACE,cAAC,IAAD,CAAS1J,GAAG,KAAK1L,KAAK,MAAMgX,GAAG,OAA/B,SACGnR,EAAgB,IAAK,yBAExB,+BACE,0EACA,8DACA,yFAGJ,qBAAKsO,IAAI,oBAAoBG,IAAI,kBAAkBF,MAAO,IAAKC,OAAQ,SAEzE,cAAC,EAAD,IACA,uBAEA,cAAC,GAAD,IACA,cAAC4C,GAAD,IACA,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAAC7B,KAAI,UAAKA,GAAtB,SACE,mCACG8B,IAAQN,EAAW,CAAC,cAAc5V,KAAI,SAAC4Q,GAAD,OACrC,cAAC,GAAD,CAA4BA,KAAMA,GAAnBA,EAAKvK,eAK1B,cAAC,IAAD,CAAO+N,KAAI,UAAKA,EAAL,YAAX,SACG8B,IAAQP,EAAe,CAAC,cAAc3V,KAAI,SAAC4Q,GAAD,OACzC,cAAC,GAAD,CAA4BA,KAAMA,GAAnBA,EAAKvK","file":"static/js/8.91088935.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@lukkasromero/cswap-uikit'\n\ninterface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  prefix?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold fontSize={fontSize}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\n\nexport const useMaticBalance = () => {\n  const {balance,account }: { balance: string, account: string} = useWallet()\n\n  const [maticBalance, setMaticBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      setMaticBalance(new BigNumber(balance))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, balance, fastRefresh])\n\n  return maticBalance\n\n}\n\n\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@lukkasromero/cswap-uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {depositFeeBP > 0 ? (\n        <StyledMaxText>\n          {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\n          {symbol}\n        </StyledMaxText>\n      ) : null}\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve, } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery ,usePresale,useBUSD} from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n\nexport const usePresaleBUSDApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const busdContract = useBUSD()\n  const presaleContract = usePresale()\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(busdContract, presaleContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, busdContract, presaleContract])\n\n  return { onApprove: handleApprove } \n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(15012000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@lukkasromero/cswap-uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@lukkasromero/cswap-uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useBlock from 'hooks/useBlock'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from '../../Home/components/CardValue'\nimport { useFarms, usePriceCakeBusd } from '../../../state/hooks'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst CakeStats = () => {\n  const totalSupply = useTotalSupply()\n  const burnedBalance = useBurnedBalance(getCakeAddress())\n  const farms = useFarms()\n  const block = useBlock()\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0)\n  const blocksTillProfit = new BigNumber(141000 * 1000000000000000000).minus(circSupply)\n\n  let CSWAPPerBlock = 0\n  if (farms && farms[0] && farms[0].CSWAPPerBlock) {\n    CSWAPPerBlock = new BigNumber(farms[0].CSWAPPerBlock).div(new BigNumber(10).pow(18)).toNumber()\n  }\n\n  return (\n    <Heading as=\"h3\">\n      {blocksTillProfit && (\n        <CardValue\n          fontSize=\"24px\"\n          value={Math.max(14504555 - block, 0)}\n          decimals={0}\n          prefix=\"Blocks until profit sharing \"\n        />\n      )} \n    </Heading>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@lukkasromero/cswap-uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@lukkasromero/cswap-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@lukkasromero/cswap-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@lukkasromero/cswap-uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} CSWAP Earned`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #00000;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #00000;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                {' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(411, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image, Flex, Text } from '@lukkasromero/cswap-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber,\n  depositFee?: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n    depositFee,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {pool.stakingTokenName === 'CSWAP' && <StyledCardAccent />}\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {sousId === 9 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={`${tokenName} Earned`} />\n        <Flex justifyContent=\"space-between\">\n        <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\n        <Text bold style={{ fontSize: '24px' }}>\n          {pool.depositFee}%\n        </Text>\n      </Flex>\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n            <div style={{ flex: 1 }}>\n              {TranslateString(384, 'Your Stake')}:\n              <Image src={`/images/tokens/${stakingTokenName}.png`} width={20} height={20} alt=\"CSWAP\" />{' '}\n              \n            </div>\n            \n            </span>\n            \n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@lukkasromero/cswap-uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@lukkasromero/cswap-uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools, usePoolFromPid } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport CakeStats from './components/CakeStats'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n    \n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'Profit Sharing Pool')}\n          </Heading>\n          <ul>\n            <li>Stake CSWAP to revieve dividend payouts.</li>\n            <li>You can unstake at any time.</li>\n            <li>Dividends are distributed linearly over the week.</li>\n          </ul>\n        </div>\n        <img src=\"/images/syrup.png\" alt=\"SYRUP POOL icon\" width={410} height={191} />\n      </Hero>\n      <CakeStats />\n      <br />\n\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </>\n          \n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n"],"sourceRoot":""}