{"version":3,"sources":["utils/callHelpers.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Home/components/CardValue.tsx","hooks/useTokenBalance.ts","hooks/useApprove.ts","hooks/useStake.ts","config/index.ts","components/layout/Flex.tsx","components/Tags.tsx","hooks/useUnstake.ts","hooks/useHarvest.ts","hooks/useBlock.ts","views/Profit/components/CakeStats.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Profit/components/DepositModal.tsx","views/Profit/components/WithdrawModal.tsx","views/Profit/components/CompoundModal.tsx","views/Profit/components/CardTitle.tsx","views/Profit/components/Card.tsx","views/Profit/components/OldSyrupTitle.tsx","views/Profit/components/HarvestButton.tsx","views/Profit/components/CardFooter.tsx","views/Profit/components/PoolCard.tsx","views/Profit/components/PoolTabButtons/index.tsx","views/Profit/components/Divider.tsx","views/Profit/Profit.tsx"],"names":["cookies","Cookies","rot13","s","replace","c","indexOf","approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","get","isAddress","ref","deposit","BigNumber","times","pow","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","tokenName","decimals","withdraw","harvest","soushHarvest","soushHarvestBnb","buy","presaleContract","tokenAddress","buyToken","claim","claimGoldIngot","StyledSpacer","styled","div","props","size","Spacer","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","TranslateString","useI18n","toLocaleString","onClick","CardValue","fontSize","prefix","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","useEffect","current","bold","useMaticBalance","useWallet","balance","useState","maticBalance","setMaticBalance","fastRefresh","useRefresh","fetchBalance","useTotalSupply","slowRefresh","totalSupply","setTotalSupply","cakeContract","getContract","cakeABI","getCakeAddress","call","supply","fetchTotalSupply","useBurnedBalance","setBalance","balanceOf","bal","useApprove","dispatch","useDispatch","useMasterchef","onApprove","useCallback","fetchFarmUserDataAsync","usePresaleBUSDApprove","busdContract","useBUSD","usePresale","useSousApprove","sousId","useSousChef","updateUserAllowance","useSousStake","isUsingBnb","handleStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","txHash","console","info","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","SYRUPIDS","useSousUnstake","includes","onUnstake","useUnstake","useHarvest","farmPid","onReward","useSousHarvest","handleHarvest","updateUserPendingReward","useBlock","BlockContext","Card","CakeStats","burnedBalance","farms","useFarms","block","circSupply","minus","blocksTillProfit","CSWAPPerBlock","toNumber","as","Math","StyledLabel","isFinished","Label","text","StyledText","Text","isDisabled","color","textDisabled","Balance","unit","previousValue","defaultProps","DepositModal","onConfirm","onDismiss","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","fullWidth","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","id","CardTitle","card","background","isActive","Title","ActionLink","OldSyrupTitle","hasBalance","href","target","StyledButton","button","padding","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","PoolCategory","BINANCE","CORE","COMMUNITY","StyledFooter","isDark","StyledDetailsButton","Details","Row","FlexFull","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","style","marginBottom","role","aria-label","getBalanceNumber","memo","RainbowLight","keyframes","StyledCardAccent","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","image","stakingTokenName","stakingTokenAddress","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","isBnbPool","depositFee","stakingTokenContract","useERC20","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","isOldSyrup","QuoteToken","SYRUP","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","flex","src","width","height","alt","HarvestButton","justifyContent","UnlockButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","textSubtle","Hero","Farm","path","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","find","f","tokenSymbol","stakingTokenFarm","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","BUSD","priceToBnb","quoteTokenSymbol","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","mb","Divider","Flex","exact","orderBy"],"mappings":"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","file":"static/js/8.35b037b1.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport Cookies from 'universal-cookie';\r\n// import rot13 from './encode'\r\nimport { isAddress } from './web3'\r\n\r\nconst cookies = new Cookies();\r\n\r\n\r\n\r\nfunction rot13(s) {\r\n  return s.replace(/[A-Z]/gi, c =>\r\n    \"NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm\"[\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".indexOf(c) ] )\r\n}\r\n\r\n\r\n\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  let ref\r\n  if(cookies.get('ref')) {\r\n    if(isAddress( rot13(cookies.get('ref')) )) {\r\n      ref = rot13(cookies.get('ref'))\r\n    }\r\n  } else {\r\n    ref = \"0x0000000000000000000000000000000000000000\"\r\n  }\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), ref)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account,tokenName) => {\r\n\r\n\r\n  let decimals;\r\n\r\n\r\n  if (tokenName === 'USDT' || tokenName === 'USDC') {\r\n    decimals = 6\r\n  } else if (tokenName === 'WBTC') {\r\n    decimals = 8\r\n  } else {\r\n    decimals = 18\r\n  }\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  let ref\r\n  if(cookies.get('ref')) {\r\n    if(isAddress( rot13(cookies.get('ref')) )) {\r\n      ref = rot13(cookies.get('ref'))\r\n    }\r\n  } else {\r\n    ref = \"0x0000000000000000000000000000000000000000\"\r\n  }\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0', ref)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const buy = async (presaleContract, tokenAddress, amount, account) => {\r\n  return presaleContract.methods\r\n    .buyToken()\r\n    .send({ from: account,value:new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const claim = async (presaleContract, account) => {\r\n  return presaleContract.methods\r\n    .claimGoldIngot()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n} ","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@lukkasromero/cswap-uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {depositFeeBP > 0 ? (\n        <StyledMaxText>\n          {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\n          {symbol}\n        </StyledMaxText>\n      ) : null}\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@lukkasromero/cswap-uikit'\n\ninterface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  prefix?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold fontSize={fontSize}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\n\nexport const useMaticBalance = () => {\n  const {balance,account }: { balance: string, account: string} = useWallet()\n\n  const [maticBalance, setMaticBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      setMaticBalance(new BigNumber(balance))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, balance, fastRefresh])\n\n  return maticBalance\n\n}\n\n\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve, } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery ,usePresale,useBUSD} from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n\nexport const usePresaleBUSDApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const busdContract = useBUSD()\n  const presaleContract = usePresale()\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(busdContract, presaleContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, busdContract, presaleContract])\n\n  return { onApprove: handleApprove } \n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(15012000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@lukkasromero/cswap-uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number,tokenName:string) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n\n\n\n\n  \n\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account,tokenName)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid,tokenName],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      // if (sousId === 0) {\n      //   const txHash = await unstake(masterChefContract, 0, amount, account)\n      //   console.info(txHash)\n      // } else if (isOldSyrup) {\n      //   const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n      //   console.info(txHash)\n      // } else {\n      //   const txHash = await sousUnstake(sousChefContract, amount, account)\n      //   console.info(txHash)\n      // }\n      // dispatch(updateUserStakedBalance(sousId, account))\n      // dispatch(updateUserBalance(sousId, account))\n      // dispatch(updateUserPendingReward(sousId, account))\n    },\n    [],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@lukkasromero/cswap-uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useBlock from 'hooks/useBlock'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from '../../Home/components/CardValue'\nimport { useFarms, usePriceCakeBusd } from '../../../state/hooks'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst CakeStats = () => {\n  const totalSupply = useTotalSupply()\n  const burnedBalance = useBurnedBalance(getCakeAddress())\n  const farms = useFarms()\n  const block = useBlock()\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0)\n  const blocksTillProfit = new BigNumber(141000 * 1000000000000000000).minus(circSupply)\n\n  let CSWAPPerBlock = 0\n  if (farms && farms[0] && farms[0].CSWAPPerBlock) {\n    CSWAPPerBlock = new BigNumber(farms[0].CSWAPPerBlock).div(new BigNumber(10).pow(18)).toNumber()\n  }\n\n  return (\n    <Heading as=\"h3\">\n      {blocksTillProfit && (\n        <CardValue\n          fontSize=\"24px\"\n          value={Math.max(14504555 - block, 0)}\n          decimals={0}\n          prefix=\"Blocks until profit sharing \"\n        />\n      )} \n    </Heading>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@lukkasromero/cswap-uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@lukkasromero/cswap-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@lukkasromero/cswap-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@lukkasromero/cswap-uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} CSWAP Earned`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #00000;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #00000;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                {' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(411, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image, Flex, Text } from '@lukkasromero/cswap-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber,\n  depositFee?: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n    depositFee,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {pool.stakingTokenName === 'CSWAP' && <StyledCardAccent />}\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {sousId === 9 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={`${tokenName} Earned`} />\n        <Flex justifyContent=\"space-between\">\n        <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\n        <Text bold style={{ fontSize: '24px' }}>\n          {pool.depositFee}%\n        </Text>\n      </Flex>\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n            <div style={{ flex: 1 }}>\n              {TranslateString(384, 'Your Stake')}:\n              <Image src={`/images/tokens/${stakingTokenName}.png`} width={20} height={20} alt=\"CSWAP\" />{' '}\n              \n            </div>\n            \n            </span>\n            \n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@lukkasromero/cswap-uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@lukkasromero/cswap-uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools, usePoolFromPid } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport CakeStats from './components/CakeStats'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n    \n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'Profit Sharing Pool')}\n          </Heading>\n          <ul>\n            <li>Stake CSWAP to revieve dividend payouts.</li>\n            <li>You can unstake at any time.</li>\n            <li>Dividends are distributed linearly over the week.</li>\n          </ul>\n        </div>\n        <img src=\"/images/syrup.png\" alt=\"SYRUP POOL icon\" width={410} height={191} />\n      </Hero>\n      <CakeStats />\n      <br />\n\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </>\n          \n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n"],"sourceRoot":""}